com/acuant/mobilesdk/AcuantErrorListener = Com.Acuant.Mobilesdk.IAcuantErrorListener
  didFailWithError(ILjava/lang/String;)V = DidFailWithError(int, string)
com/acuant/mobilesdk/Card = Com.Acuant.Mobilesdk.Card
  <init>()V = .ctor()
  DRIVERS_LICENSE_CARD_ASPECT_RATIO = DriversLicenseCardAspectRatio
  idLocationCityTestResult = IdLocationCityTestResult
  idLocationCountryTestResult = IdLocationCountryTestResult
  idLocationStateTestResult = IdLocationStateTestResult
  idLocationZipcodeTestResult = IdLocationZipcodeTestResult
  PASSPORT_CARD_ASPECT_RATIO = PassportCardAspectRatio
  getErrorCard()Ljava/lang/String; = ErrorCard
  setErrorCard(Ljava/lang/String;)V = ErrorCard
  isEmpty()Z = IsEmpty
com/acuant/mobilesdk/CardCroppingListener = Com.Acuant.Mobilesdk.ICardCroppingListener
  onBarcodeTimeOut(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)V = OnBarcodeTimeOut(Android.Graphics.Bitmap, Android.Graphics.Bitmap)
  onCancelCapture(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)V = OnCancelCapture(Android.Graphics.Bitmap, Android.Graphics.Bitmap)
  onCardCroppingFinish(Landroid/graphics/Bitmap;I)V = OnCardCroppingFinish(Android.Graphics.Bitmap, int)
  onCardCroppingFinish(Landroid/graphics/Bitmap;ZI)V = onCardCroppingFinishTwo(Android.Graphics.Bitmap, bool, int)
  onCardCroppingStart(Landroid/app/Activity;)V = OnCardCroppingStart(Android.App.Activity)
  onOriginalCapture(Landroid/graphics/Bitmap;)V = OnOriginalCapture(Android.Graphics.Bitmap)
  onPDF417Finish(Ljava/lang/String;)V = OnPDF417Finish(string)
com/acuant/mobilesdk/CardType = Com.Acuant.Mobilesdk.CardType
  <init>()V = .ctor()
  DRIVERS_LICENSE = DriversLicense
  FACIAL_RECOGNITION = FacialRecognition
  MEDICAL_INSURANCE = MedicalInsurance
  PASSPORT = Passport
com/acuant/mobilesdk/ConnectWebserviceListener = Com.Acuant.Mobilesdk.IConnectWebserviceListener
  deleteImageConnectServiceCompleted(Ljava/lang/String;)V = DeleteImageConnectServiceCompleted(string)
  deleteImageConnectServiceFailed(ILjava/lang/String;)V = DeleteImageConnectServiceFailed(int, string)
  processImageConnectServiceCompleted(Ljava/lang/String;)V = ProcessImageConnectServiceCompleted(string)
  processImageConnectServiceFailed(ILjava/lang/String;)V = ProcessImageConnectServiceFailed(int, string)
com/acuant/mobilesdk/detect/CameraCardDetectBase = Com.Acuant.Mobilesdk.Detect.ICameraCardDetectBase
  setHoldSteadyTextVisibility(I)V = SetHoldSteadyTextVisibility(int)
com/acuant/mobilesdk/detect/FinalDescriptor = Com.Acuant.Mobilesdk.Detect.FinalDescriptor
  <init>()V = .ctor()
com/acuant/mobilesdk/detect/InitialDescriptor = Com.Acuant.Mobilesdk.Detect.InitialDescriptor
  <init>()V = .ctor()
  getIdLayout()Ljava/lang/Integer; = IdLayout
  setIdLayout(Ljava/lang/Integer;)V = IdLayout
com/acuant/mobilesdk/detect/PDF417/BarcodeCroppingListener = Com.Acuant.Mobilesdk.Detect.PDF417.IBarcodeCroppingListener
  onCroppingBarcodeSideFinished(Landroid/graphics/Bitmap;)V = OnCroppingBarcodeSideFinished(Android.Graphics.Bitmap)
com/acuant/mobilesdk/ErrorType = Com.Acuant.Mobilesdk.ErrorType
  <init>()V = .ctor()
  AcuantErrorAccountDisabled = AcuantErrorAccountDisabled
  AcuantErrorAutoDetectState = AcuantErrorAutoDetectState
  AcuantErrorCameraUnauthorized = AcuantErrorCameraUnauthorized
  AcuantErrorCouldNotReachServer = AcuantErrorCouldNotReachServer
  AcuantErrorInactiveLicenseKey = AcuantErrorInactiveLicenseKey
  AcuantErrorIncorrectDocumentScanned = AcuantErrorIncorrectDocumentScanned
  AcuantErrorInternalServerError = AcuantErrorInternalServerError
  AcuantErrorInvalidLicenseKey = AcuantErrorInvalidLicenseKey
  AcuantErrorOnActiveLicenseKey = AcuantErrorOnActiveLicenseKey
  AcuantErrorTimedOut = AcuantErrorTimedOut
  AcuantErrorUnableToAuthenticate = AcuantErrorUnableToAuthenticate
  AcuantErrorUnableToCrop = AcuantErrorUnableToCrop
  AcuantErrorUnableToProcess = AcuantErrorUnableToProcess
  AcuantErrorUnknown = AcuantErrorUnknown
  AcuantErrorValidatingLicensekey = AcuantErrorValidatingLicensekey
  AcuantErrorWebResponse = AcuantErrorWebResponse
  AcuantNoneError = AcuantNoneError
com/acuant/mobilesdk/exceptions/AuthorizationException = Com.Acuant.Mobilesdk.Exceptions.AuthorizationException
  <init>(Ljava/lang/String;)V = .ctor(string)
com/acuant/mobilesdk/exceptions/ConnectionException = Com.Acuant.Mobilesdk.Exceptions.ConnectionException
  <init>(Ljava/lang/String;)V = .ctor(string)
com/acuant/mobilesdk/exceptions/TaskAlreadyRunningException = Com.Acuant.Mobilesdk.Exceptions.TaskAlreadyRunningException
  <init>(Ljava/lang/String;)V = .ctor(string)
com/acuant/mobilesdk/FacialRecognitionListener = Com.Acuant.Mobilesdk.IFacialRecognitionListener
  onFacialRecognitionCanceled()V = OnFacialRecognitionCanceled()
  onFacialRecognitionCompleted(Landroid/graphics/Bitmap;)V = OnFacialRecognitionCompleted(Android.Graphics.Bitmap)
  onFacialRecognitionTimedOut(Landroid/graphics/Bitmap;)V = OnFacialRecognitionTimedOut(Android.Graphics.Bitmap)
com/acuant/mobilesdk/LicenseActivationDetails = Com.Acuant.Mobilesdk.LicenseActivationDetails
  <init>()V = .ctor()
  <init>(Ljava/lang/String;Ljava/lang/String;IZ)V = .ctor(string, string, int, bool)
  isIsLicenseKeyActivated()Z = IsLicenseKeyActivated
  setIsLicenseKeyActivated(Z)V = IsLicenseKeyActivated
  getIsLicenseKeyActivatedDescscription()Ljava/lang/String; = IsLicenseKeyActivatedDescscription
  setIsLicenseKeyActivatedDescscription(Ljava/lang/String;)V = IsLicenseKeyActivatedDescscription
  getWebResponseCode()I = WebResponseCode
  setWebResponseCode(I)V = WebResponseCode
  getWebResponseDescription()Ljava/lang/String; = WebResponseDescription
  setWebResponseDescription(Ljava/lang/String;)V = WebResponseDescription
com/acuant/mobilesdk/LicenseDetails = Com.Acuant.Mobilesdk.LicenseDetails
  <init>()V = .ctor()
  isAddressVerification()Z = AddressVerification
  setAddressVerification(Z)V = AddressVerification
  isAssureIDAllowed()Z = AssureIDAllowed
  setAssureIDAllowed(Z)V = AssureIDAllowed
  isBarcodeAllowed()Z = BarcodeAllowed
  setBarcodeAllowed(Z)V = BarcodeAllowed
  getBarcodeProcesses()Ljava/lang/String; = BarcodeProcesses
  setBarcodeProcesses(Ljava/lang/String;)V = BarcodeProcesses
  getCompanyName()Ljava/lang/String; = CompanyName
  setCompanyName(Ljava/lang/String;)V = CompanyName
  getCustomerName()Ljava/lang/String; = CustomerName
  setCustomerName(Ljava/lang/String;)V = CustomerName
  isDriversLicenseAllowed()Z = DriversLicenseAllowed
  setDriversLicenseAllowed(Z)V = DriversLicenseAllowed
  getDriversLicenseProcesses()Ljava/lang/String; = DriversLicenseProcesses
  setDriversLicenseProcesses(Ljava/lang/String;)V = DriversLicenseProcesses
  getEmail()Ljava/lang/String; = Email
  setEmail(Ljava/lang/String;)V = Email
  isFacialAllowed()Z = FacialAllowed
  setFacialAllowed(Z)V = FacialAllowed
  isInsuranceAllowed()Z = InsuranceAllowed
  setInsuranceAllowed(Z)V = InsuranceAllowed
  getInsuranceProcesses()Ljava/lang/String; = InsuranceProcesses
  setInsuranceProcesses(Ljava/lang/String;)V = InsuranceProcesses
  isLicenseKeyActivated()Z = LicenseKeyActivated
  setLicenseKeyActivated(Z)V = LicenseKeyActivated
  isPassportAllowed()Z = PassportAllowed
  setPassportAllowed(Z)V = PassportAllowed
  getPassportProcesses()Ljava/lang/String; = PassportProcesses
  setPassportProcesses(Ljava/lang/String;)V = PassportProcesses
  getResponseCodeAuthorization()Ljava/lang/String; = ResponseCodeAuthorization
  setResponseCodeAuthorization(Ljava/lang/String;)V = ResponseCodeAuthorization
  getResponseMessageAuthorization()Ljava/lang/String; = ResponseMessageAuthorization
  setResponseMessageAuthorization(Ljava/lang/String;)V = ResponseMessageAuthorization
  getSoftwareProvider()Ljava/lang/String; = SoftwareProvider
  setSoftwareProvider(Ljava/lang/String;)V = SoftwareProvider
  getWebResponseCode()Ljava/lang/String; = WebResponseCode
  setWebResponseCode(Ljava/lang/String;)V = WebResponseCode
  getWebResponseDescription()Ljava/lang/String; = WebResponseDescription
  setWebResponseDescription(Ljava/lang/String;)V = WebResponseDescription
  accountStatus()Z = AccountStatus()
  setAccountStatus(Z)V = SetAccountStatus(bool)
com/acuant/mobilesdk/LocationVerificationResult = Com.Acuant.Mobilesdk.LocationVerificationResult
  <init>()V = .ctor()
  FAILED = Failed
  NOT_AVAILABLE = NotAvailable
  PASSED = Passed
com/acuant/mobilesdk/Permission = Com.Acuant.Mobilesdk.Permission
  <init>()V = .ctor()
  PERMISSION_CAMERA = PermissionCamera
  PERMISSION_LOCATION = PermissionLocation
com/acuant/mobilesdk/Region = Com.Acuant.Mobilesdk.Region
  <init>()V = .ctor()
  REGION_AFRICA = RegionAfrica
  REGION_AMERICA = RegionAmerica
  REGION_ASIA = RegionAsia
  REGION_AUSTRALIA = RegionAustralia
  REGION_CANADA = RegionCanada
  REGION_EUROPE = RegionEurope
  REGION_UNITED_STATES = RegionUnitedStates
com/acuant/mobilesdk/Response = Com.Acuant.Mobilesdk.Response
  <init>(ILjava/lang/String;)V = .ctor(int, string)
  <init>(ILjava/lang/String;Lorg/json/JSONObject;)V = .ctor(int, string, Org.Json.JSONObject)
  getErrorMessage()Ljava/lang/String; = ErrorMessage
  setErrorMessage(Ljava/lang/String;)V = ErrorMessage
  getJsonResponse()Lorg/json/JSONObject; = JsonResponse
  setJsonResponse(Lorg/json/JSONObject;)V = JsonResponse
  getStatusCode()I = StatusCode
  setStatusCode(I)V = StatusCode
com/acuant/mobilesdk/task/CroppingTaskBase = Com.Acuant.Mobilesdk.Task.CroppingTaskBase
  <init>()V = .ctor()
  acuantActivity = AcuantActivity
  cardType = CardType
  croppedCard = CroppedCard
  DEFAULT_CROP_MANUAL_HEIGHT = DefaultCropManualHeight
  DEFAULT_CROP_MANUAL_WIDTH = DefaultCropManualWidth
  DEFAULT_CROP_PASSPORT_WIDTH = DefaultCropPassportWidth
  isBackSide = IsBackSide
  originalCapture = OriginalCapture
  originalPhoto = OriginalPhoto
  photo = Photo
  resizeWidth = ResizeWidth
  TEMP_FOLDER_NAME = TempFolderName
  TEMP_PHOTO_FILENAME = TempPhotoFilename
  callAcuantCardCroppingListenerOnFinish(Landroid/app/Activity;Landroid/graphics/Bitmap;Ljava/lang/Boolean;II)V = CallAcuantCardCroppingListenerOnFinish(Android.App.Activity, Android.Graphics.Bitmap, Java.Lang.Boolean, int, int)
  callAcuantOriginalCaptureListenerOnFinish(Landroid/app/Activity;Landroid/graphics/Bitmap;)V = CallAcuantOriginalCaptureListenerOnFinish(Android.App.Activity, Android.Graphics.Bitmap)
  callCssnCardCroppingListenerOnStart(Landroid/app/Activity;)V = CallCssnCardCroppingListenerOnStart(Android.App.Activity)
com/acuant/mobilesdk/TaskState = Com.Acuant.Mobilesdk.TaskState
  CANCELED = Canceled
  FINISHED = Finished
  NEVER_STARTED = NeverStarted
  RUNNING = Running
  valueOf(Ljava/lang/String;)Lcom/acuant/mobilesdk/TaskState; = ValueOf(string)
  values()[Lcom/acuant/mobilesdk/TaskState; = Values()
com/acuant/mobilesdk/util/Constants = Com.Acuant.Mobilesdk.Util.Constants
  <init>()V = .ctor()
  APP = App
  ERROR_CONEXION = ErrorConexion
  ERROR_IOEXEPTION = ErrorIoexeption
  ERROR_NETWORK = ErrorNetwork
  ERROR_RESULT = ErrorResult
  ERROR_TIME_OUT = ErrorTimeOut
  FACE_DETECTION_KEY = FaceDetectionKey
  FIRSTTIME_KEY = FirsttimeKey
  REGION_DETECTION_KEY = RegionDetectionKey
  RESULT_ERROR_KEY = ResultErrorKey
  RESULT_KEY = ResultKey
  SHARED_OPTIONS_NAME = SharedOptionsName
  SHARED_PREFS_MODE = SharedPrefsMode
  SIGNATURE_DETECTION_KEY = SignatureDetectionKey
com/acuant/mobilesdk/util/NetworkListener = Com.Acuant.Mobilesdk.Util.INetworkListener
  networkRequestCompleted(Ljava/lang/String;I)V = NetworkRequestCompleted(string, int)
com/acuant/mobilesdk/util/WatermarkTextView = Com.Acuant.Mobilesdk.Util.WatermarkTextView
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
com/acuant/mobilesdk/WebServiceListener = Com.Acuant.Mobilesdk.IWebServiceListener
  activateLicenseKeyCompleted(Lcom/acuant/mobilesdk/LicenseActivationDetails;)V = ActivateLicenseKeyCompleted(Com.Acuant.Mobilesdk.LicenseActivationDetails)
  processImageServiceCompleted(Lcom/acuant/mobilesdk/Card;)V = ProcessImageServiceCompleted(Com.Acuant.Mobilesdk.Card)
  validateLicenseKeyCompleted(Lcom/acuant/mobilesdk/LicenseDetails;)V = ValidateLicenseKeyCompleted(Com.Acuant.Mobilesdk.LicenseDetails)
com/android/zcardcapture/Constants = Com.Android.Zcardcapture.Constants
  <init>()V = .ctor()
  CROPPEDIMAGE = Croppedimage
  imageCropBitmap = ImageCropBitmap
com/cssnmobilesdk/BuildConfig = Com.Cssnmobilesdk.BuildConfig
  <init>()V = .ctor()
cvlib/base/Rect = Cvlib.Base.Rect
  <init>()V = .ctor()
  <init>([I)V = .ctor(int[])
  <init>(IIII)V = .ctor(int, int, int, int)
  height = Height
  width = Width
  x = X
  y = Y
cvlib/base/RectInvoke = Cvlib.Base.RectInvoke
  <init>()V = .ctor()
cvlib/zcard/CardViewMode = Cvlib.Zcard.CardViewMode
  <init>()V = .ctor()
cvlib/zfacelive/CameraFrame = Cvlib.Zfacelive.CameraFrame
  <init>()V = .ctor()
  n_makeMatFromCameraFrame([BIII)J = N_makeMatFromCameraFrame(byte[], int, int, int)
cvlib/zfacelive/Mat = Cvlib.Zfacelive.Mat
  <init>()V = .ctor()
  n_channels(J)I = N_channels(long)
  n_createMat()J = N_createMat()
  n_destoryMat(J)V = N_destoryMat(long)
  n_getHeight(J)I = N_getHeight(long)
  n_getWidth(J)I = N_getWidth(long)
  n_rotate180(J)V = N_rotate180(long)
  n_rotateLeft(J)V = N_rotateLeft(long)
  n_rotateRight(J)V = N_rotateRight(long)
  n_toImage(JLjava/lang/String;)Z = N_toImage(long, string)
cvlib/zfacelive/ZFaceInfo = Cvlib.Zfacelive.ZFaceInfo
  <init>()V = .ctor()
  faceRegion = FaceRegion
  flagDetectedFace = FlagDetectedFace
  flagLeftEyeOpen = FlagLeftEyeOpen
  flagRightEyeOpen = FlagRightEyeOpen
  leftEyeValue = LeftEyeValue
  rightEyeValue = RightEyeValue
cvlib/zfacelive/ZFaceLiveCapture = Cvlib.Zfacelive.ZFaceLiveCapture
  <init>()V = .ctor()
  isDetectedLiveness()Z = IsDetectedLiveness
  getStatus()Ljava/lang/String; = Status
  extractFaceInfo([BI)Lcvlib/zfacelive/ZFaceInfo; = ExtractFaceInfo(byte[], int)
  getImage()[I = GetImage()
  init()V = Init()
  release()V = Release()
  setFrameSize(II)V = SetFrameSize(int, int)
  setRotateMode(I)V = SetRotateMode(int)
org/jnbis/Bitmap = Org.Jnbis.Bitmap
  <init>([BIIIII)V = .ctor(byte[], int, int, int, int, int)
  getDepth()I = Depth
  getHeight()I = Height
  getLossyflag()I = Lossyflag
  getPpi()I = Ppi
  getWidth()I = Width
  getPixels()[B = GetPixels()
org/jnbis/BitmapWithMetadata = Org.Jnbis.BitmapWithMetadata
  <init>([BIIIII)V = .ctor(byte[], int, int, int, int, int)
  <init>([BIIIIILjava/util/Map;[Ljava/lang/String;)V = .ctor(byte[], int, int, int, int, int, System.Collections.Generic.IDictionary<string, string>, params string[])
  getComments()Ljava/util/List; = Comments
  getMetadata()Ljava/util/Map; = Metadata
org/jnbis/NISTConstants = Org.Jnbis.INISTConstants
org/jnbis/test/WSQTest = Org.Jnbis.Test.WSQTest
  <init>()V = .ctor()
  testDecode()V = TestDecode()
  testEncode()V = TestEncode()
org/jnbis/WSQConstants = Org.Jnbis.IWSQConstants
  BITMASK = Bitmask
org/jnbis/WSQDecoder = Org.Jnbis.WSQDecoder
  <init>()V = .ctor()
  decode(Ljava/io/DataInput;)Lorg/jnbis/BitmapWithMetadata; = Decode(Java.IO.IDataInput)
  decode(Ljava/io/InputStream;)Lorg/jnbis/BitmapWithMetadata; = Decode(System.IO.Stream)
org/jnbis/WSQEncoder = Org.Jnbis.WSQEncoder
  <init>()V = .ctor()
  encode(Ljava/io/DataOutput;Lorg/jnbis/Bitmap;DLjava/util/Map;[Ljava/lang/String;)V = Encode(Java.IO.IDataOutput, Org.Jnbis.Bitmap, double, System.Collections.Generic.IDictionary<string, string>, params string[])
  encode(Ljava/io/OutputStream;Lorg/jnbis/Bitmap;D[Ljava/lang/String;)V = Encode(System.IO.Stream, Org.Jnbis.Bitmap, double, params string[])
  encode(Ljava/io/OutputStream;Lorg/jnbis/Bitmap;DLjava/util/Map;[Ljava/lang/String;)V = Encode(System.IO.Stream, Org.Jnbis.Bitmap, double, System.Collections.Generic.IDictionary<string, string>, params string[])
org/jnbis/WSQHelper = Org.Jnbis.WSQHelper
  <init>()V = .ctor()
