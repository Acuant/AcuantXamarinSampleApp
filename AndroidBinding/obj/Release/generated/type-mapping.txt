com/acuant/mobilesdk/AcuantAndroidMobileSDKController = Com.Acuant.Mobilesdk.AcuantAndroidMobileSDKController
  <init>()V = .ctor()
  MIME_TEXT_PLAIN = MimeTextPlain
  getActivationState()Lcom/acuant/mobilesdk/TaskState; = ActivationState
  getAcuantErrorListener()Lcom/acuant/mobilesdk/AcuantErrorListener; = AcuantErrorListener
  setAcuantErrorListener(Lcom/acuant/mobilesdk/AcuantErrorListener;)V = AcuantErrorListener
  getAcuantTagReadingListener()Lcom/acuant/mobilesdk/AcuantTagReadingListener; = AcuantTagReadingListener
  setAcuantTagReadingListener(Lcom/acuant/mobilesdk/AcuantTagReadingListener;)V = AcuantTagReadingListener
  getBarcodeCameraContext()Landroid/content/Context; = BarcodeCameraContext
  getCardCroppingListener()Lcom/acuant/mobilesdk/CardCroppingListener; = CardCroppingListener
  setCardCroppingListener(Lcom/acuant/mobilesdk/CardCroppingListener;)V = CardCroppingListener
  getCardProcessingState()Lcom/acuant/mobilesdk/TaskState; = CardProcessingState
  getContext()Landroid/app/Activity; = Context
  setContext(Landroid/app/Activity;)V = Context
  getCroppingState()Lcom/acuant/mobilesdk/TaskState; = CroppingState
  getDeviceAddress()Ljava/lang/String; = DeviceAddress
  getDeviceArea()Ljava/lang/String; = DeviceArea
  getDeviceCity()Ljava/lang/String; = DeviceCity
  getDeviceCountryCode()Ljava/lang/String; = DeviceCountryCode
  getDeviceCountryName()Ljava/lang/String; = DeviceCountryName
  getDeviceState()Ljava/lang/String; = DeviceState
  getDeviceZipCode()Ljava/lang/String; = DeviceZipCode
  getFacialListener()Lcom/acuant/mobilesdk/FacialRecognitionListener; = FacialListener
  setFacialListener(Lcom/acuant/mobilesdk/FacialRecognitionListener;)V = FacialListener
  getFacialRecognitionTimeoutInSeconds()I = FacialRecognitionTimeoutInSeconds
  setFacialRecognitionTimeoutInSeconds(I)V = FacialRecognitionTimeoutInSeconds
  getFinalDescriptor()Lcom/acuant/mobilesdk/detect/FinalDescriptor; = FinalDescriptor
  getFinalMessage()Ljava/util/Map; = FinalMessage
  getFlashlightMarginBottom()I = FlashlightMarginBottom
  getFlashlightMarginLeft()I = FlashlightMarginLeft
  getFlashlightMarginRight()I = FlashlightMarginRight
  getFlashlightMarginTop()I = FlashlightMarginTop
  getHeight()I = Height
  getInitialDescriptor()Lcom/acuant/mobilesdk/detect/InitialDescriptor; = InitialDescriptor
  getInitialMessage()Ljava/util/Map; = InitialMessage
  getInstance()Lcom/acuant/mobilesdk/AcuantAndroidMobileSDKController; = Instance
  getInstructionMarginLeft()I = InstructionMarginLeft
  getInstructionMarginTop()I = InstructionMarginTop
  getInstructionPaint()Landroid/graphics/Paint; = InstructionPaint
  getInstructionText()Ljava/lang/String; = InstructionText
  isAssureIDWS()Z = IsAssureIDWS
  getSdkContext()Landroid/content/Context; = SdkContext
  getSubInstructionMarginLeft()I = SubInstructionMarginLeft
  getSubInstructionMarginTop()I = SubInstructionMarginTop
  getSubInstructionPaint()Landroid/graphics/Paint; = SubInstructionPaint
  getSubInstructionText()Ljava/lang/String; = SubInstructionText
  getValidationState()Lcom/acuant/mobilesdk/TaskState; = ValidationState
  getWatermarkMarginBottom()I = WatermarkMarginBottom
  getWatermarkMarginLeft()I = WatermarkMarginLeft
  getWatermarkMarginRight()I = WatermarkMarginRight
  getWatermarkMarginTop()I = WatermarkMarginTop
  getWatermarkText()Ljava/lang/String; = WatermarkText
  getWidth()I = Width
  setWidth(I)V = Width
  callActivateLicenseKeyService(Ljava/lang/String;)V = CallActivateLicenseKeyService(string)
  callProcessImageConnectServices(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Ljava/lang/String;Landroid/app/Activity;Lcom/acuant/mobilesdk/ProcessImageRequestOptions;)V = CallProcessImageConnectServices(Android.Graphics.Bitmap, Android.Graphics.Bitmap, string, Android.App.Activity, Com.Acuant.Mobilesdk.ProcessImageRequestOptions)
  callProcessImageServices(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Ljava/lang/String;Landroid/app/Activity;Lcom/acuant/mobilesdk/ProcessImageRequestOptions;)V = CallProcessImageServices(Android.Graphics.Bitmap, Android.Graphics.Bitmap, string, Android.App.Activity, Com.Acuant.Mobilesdk.ProcessImageRequestOptions)
  callValidateLicenseKeyService(Ljava/lang/String;)V = CallValidateLicenseKeyService(string)
  canCaptureOriginalImage()Z = CanCaptureOriginalImage()
  cleanup()V = Cleanup()
  deleteInstanceConnectServices(Landroid/app/Activity;Ljava/lang/String;)V = DeleteInstanceConnectServices(Android.App.Activity, string)
  enableLocationAuthentication(Landroid/app/Activity;)V = EnableLocationAuthentication(Android.App.Activity)
  finishScanningBarcodeCamera()V = FinishScanningBarcodeCamera()
  getInstance(Landroid/app/Activity;)Lcom/acuant/mobilesdk/AcuantAndroidMobileSDKController; = GetInstance(Android.App.Activity)
  getInstance(Landroid/app/Activity;Ljava/lang/String;)Lcom/acuant/mobilesdk/AcuantAndroidMobileSDKController; = GetInstance(Android.App.Activity, string)
  getInstance(Landroid/app/Activity;Ljava/lang/String;Ljava/lang/String;)Lcom/acuant/mobilesdk/AcuantAndroidMobileSDKController; = GetInstance(Android.App.Activity, string, string)
  getInstance(Landroid/app/Activity;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/acuant/mobilesdk/AcuantAndroidMobileSDKController; = GetInstance(Android.App.Activity, string, string, string, string)
  getInstanceAndShowCameraInterface(Landroid/app/Activity;Ljava/lang/String;Landroid/app/Activity;IIZ)Lcom/acuant/mobilesdk/AcuantAndroidMobileSDKController; = GetInstanceAndShowCameraInterface(Android.App.Activity, string, Android.App.Activity, int, int, bool)
  listenNFC(Landroid/app/Activity;Landroid/nfc/NfcAdapter;)V = ListenNFC(Android.App.Activity, Android.Nfc.NfcAdapter)
  onLocationChanged(Landroid/location/Location;)V = OnLocationChanged(Android.Locations.Location)
  onProviderDisabled(Ljava/lang/String;)V = OnProviderDisabled(string)
  onProviderEnabled(Ljava/lang/String;)V = OnProviderEnabled(string)
  onStatusChanged(Ljava/lang/String;ILandroid/os/Bundle;)V = OnStatusChanged(string, Android.Locations.Availability, Android.OS.Bundle)
  pauseScanningBarcodeCamera()V = PauseScanningBarcodeCamera()
  readNFCTag(Landroid/content/Intent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = ReadNFCTag(Android.Content.Intent, string, string, string)
  reinitTaskStates()V = ReinitTaskStates()
  resumeScanningBarcodeCamera()V = ResumeScanningBarcodeCamera()
  setCanShowBracketsOnTablet(Z)V = SetCanShowBracketsOnTablet(bool)
  setCaptureOriginalCapture(Z)V = SetCaptureOriginalCapture(bool)
  setCloudUrl(Ljava/lang/String;)V = SetCloudUrl(string)
  setConnectWebServiceListener(Lcom/acuant/mobilesdk/ConnectWebserviceListener;)V = SetConnectWebServiceListener(Com.Acuant.Mobilesdk.IConnectWebserviceListener)
  setCropBarcode(Z)V = SetCropBarcode(bool)
  setCropBarcodeOnCancel(Z)V = SetCropBarcodeOnCancel(bool)
  setFinalMessageDescriptor(Ljava/lang/Integer;)V = SetFinalMessageDescriptor(Java.Lang.Integer)
  setFinalMessageDescriptor(Ljava/lang/String;IIII)V = SetFinalMessageDescriptor(string, int, int, int, int)
  setFlashlight(Z)V = SetFlashlight(bool)
  setFlashlight(IIII)V = SetFlashlight(int, int, int, int)
  setFlashlightImageDrawable(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V = SetFlashlightImageDrawable(Android.Graphics.Drawables.Drawable, Android.Graphics.Drawables.Drawable)
  setInitialMessageDescriptor(Ljava/lang/Integer;)V = SetInitialMessageDescriptor(Java.Lang.Integer)
  setInitialMessageDescriptor(Ljava/lang/String;IIII)V = SetInitialMessageDescriptor(string, int, int, int, int)
  setInstructionText(Ljava/lang/String;IILandroid/graphics/Paint;)V = SetInstructionText(string, int, int, Android.Graphics.Paint)
  setLicensekey(Ljava/lang/String;)V = SetLicensekey(string)
  setPdf417BarcodeImageDrawable(Landroid/graphics/drawable/Drawable;)V = SetPdf417BarcodeImageDrawable(Android.Graphics.Drawables.Drawable)
  setShowActionBar(Z)V = SetShowActionBar(bool)
  setShowInitialMessage(Z)V = SetShowInitialMessage(bool)
  setShowInitialMessageAndStopCapture(Z)V = SetShowInitialMessageAndStopCapture(bool)
  setShowStatusBar(Z)V = SetShowStatusBar(bool)
  setShowWatermark(Z)V = SetShowWatermark(bool)
  setSubInstructionText(Ljava/lang/String;IILandroid/graphics/Paint;)V = SetSubInstructionText(string, int, int, Android.Graphics.Paint)
  setWatermarkText(Ljava/lang/String;IIII)V = SetWatermarkText(string, int, int, int, int)
  setWebServiceListener(Lcom/acuant/mobilesdk/WebServiceListener;)V = SetWebServiceListener(Com.Acuant.Mobilesdk.IWebServiceListener)
  showCameraInterface(Landroid/app/Activity;IIZ)V = ShowCameraInterface(Android.App.Activity, int, int, bool)
  showCameraInterfacePDF417(Landroid/app/Activity;II)V = ShowCameraInterfacePDF417(Android.App.Activity, int, int)
  showManualCameraInterface(Landroid/app/Activity;IIZ)V = ShowManualCameraInterface(Android.App.Activity, int, int, bool)
  showManualFacialCameraInterface(Landroid/app/Activity;)Z = ShowManualFacialCameraInterface(Android.App.Activity)
com/acuant/mobilesdk/AcuantErrorListener = Com.Acuant.Mobilesdk.IAcuantErrorListener
  didFailWithError(ILjava/lang/String;)V = DidFailWithError(int, string)
com/acuant/mobilesdk/AcuantNFCCardDetails = Com.Acuant.Mobilesdk.AcuantNFCCardDetails
  aaAunthenticated = AaAunthenticated
  aaSupported = AaSupported
  authenticDataGroupHashes = AuthenticDataGroupHashes
  authenticDocSignature = AuthenticDocSignature
  bacAunthenticated = BacAunthenticated
  bacSupported = BacSupported
  caAunthenticated = CaAunthenticated
  caSupported = CaSupported
  dataGroupHashes = DataGroupHashes
  DateOfBirth = DateOfBirth
  DateOfExpiry = DateOfExpiry
  dg10Encoded = Dg10Encoded
  dg11Encoded = Dg11Encoded
  dg12Encoded = Dg12Encoded
  dg13Encoded = Dg13Encoded
  dg14Encoded = Dg14Encoded
  dg15Encoded = Dg15Encoded
  dg1Encoded = Dg1Encoded
  dg2Encoded = Dg2Encoded
  dg3Encoded = Dg3Encoded
  dg4Encoded = Dg4Encoded
  dg5Encoded = Dg5Encoded
  dg6Encoded = Dg6Encoded
  dg7Encoded = Dg7Encoded
  dg8Encoded = Dg8Encoded
  dg9Encoded = Dg9Encoded
  digestAlgorithm = DigestAlgorithm
  docSignerValidity = DocSignerValidity
  DocumentCode = DocumentCode
  DocumentNumber = DocumentNumber
  DocumentType = DocumentType
  IssuingState = IssuingState
  ldsVersion = LdsVersion
  Nationality = Nationality
  OptionalData1 = OptionalData1
  OptionalData2 = OptionalData2
  PersonalNumber = PersonalNumber
  PrimaryIdentifier = PrimaryIdentifier
  SecondaryIdentifier = SecondaryIdentifier
  signatureAlgorithm = SignatureAlgorithm
  SODEncoded = SODEncoded
  taAunthenticated = TaAunthenticated
  taSupported = TaSupported
  isAaAunthenticated()Z = AaAunthenticated
  setAaAunthenticated(Z)V = AaAunthenticated
  isAaSupported()Z = AaSupported
  setAaSupported(Z)V = AaSupported
  isAuthenticDataGroupHashes()Z = AuthenticDataGroupHashes
  setAuthenticDataGroupHashes(Z)V = AuthenticDataGroupHashes
  isAuthenticDocSignature()Z = AuthenticDocSignature
  setAuthenticDocSignature(Z)V = AuthenticDocSignature
  isBacAunthenticated()Z = BacAunthenticated
  setBacAunthenticated(Z)V = BacAunthenticated
  isBacSupported()Z = BacSupported
  setBacSupported(Z)V = BacSupported
  isCaAunthenticated()Z = CaAunthenticated
  setCaAunthenticated(Z)V = CaAunthenticated
  isCaSupported()Z = CaSupported
  setCaSupported(Z)V = CaSupported
  getDataGroupHashes()Ljava/util/Map; = DataGroupHashes
  setDataGroupHashes(Ljava/util/Map;)V = DataGroupHashes
  getDateOfBirth()Ljava/lang/String; = DateOfBirth
  setDateOfBirth(Ljava/lang/String;)V = DateOfBirth
  getDateOfExpiry()Ljava/lang/String; = DateOfExpiry
  setDateOfExpiry(Ljava/lang/String;)V = DateOfExpiry
  getDigestAlgorithm()Ljava/lang/String; = DigestAlgorithm
  setDigestAlgorithm(Ljava/lang/String;)V = DigestAlgorithm
  getDocSignerValidity()Ljava/lang/String; = DocSignerValidity
  setDocSignerValidity(Ljava/lang/String;)V = DocSignerValidity
  getDocumentCode()Ljava/lang/String; = DocumentCode
  setDocumentCode(Ljava/lang/String;)V = DocumentCode
  getDocumentNumber()Ljava/lang/String; = DocumentNumber
  setDocumentNumber(Ljava/lang/String;)V = DocumentNumber
  getDocumentType()I = DocumentType
  setDocumentType(I)V = DocumentType
  getIssuingState()Ljava/lang/String; = IssuingState
  setIssuingState(Ljava/lang/String;)V = IssuingState
  getLdsVersion()Ljava/lang/String; = LdsVersion
  setLdsVersion(Ljava/lang/String;)V = LdsVersion
  getNationality()Ljava/lang/String; = Nationality
  setNationality(Ljava/lang/String;)V = Nationality
  getOptionalData1()Ljava/lang/String; = OptionalData1
  setOptionalData1(Ljava/lang/String;)V = OptionalData1
  getOptionalData2()Ljava/lang/String; = OptionalData2
  setOptionalData2(Ljava/lang/String;)V = OptionalData2
  getPersonalNumber()Ljava/lang/String; = PersonalNumber
  setPersonalNumber(Ljava/lang/String;)V = PersonalNumber
  getPrimaryIdentifier()Ljava/lang/String; = PrimaryIdentifier
  setPrimaryIdentifier(Ljava/lang/String;)V = PrimaryIdentifier
  getSecondaryIdentifier()Ljava/lang/String; = SecondaryIdentifier
  setSecondaryIdentifier(Ljava/lang/String;)V = SecondaryIdentifier
  getSignatureAlgorithm()Ljava/lang/String; = SignatureAlgorithm
  setSignatureAlgorithm(Ljava/lang/String;)V = SignatureAlgorithm
  isTaAunthenticated()Z = TaAunthenticated
  setTaAunthenticated(Z)V = TaAunthenticated
  isTaSupported()Z = TaSupported
  setTaSupported(Z)V = TaSupported
  CardDetailsString()Ljava/lang/String; = CardDetailsString()
  getDg10Encoded()[B = GetDg10Encoded()
  getDg11Encoded()[B = GetDg11Encoded()
  getDg12Encoded()[B = GetDg12Encoded()
  getDg13Encoded()[B = GetDg13Encoded()
  getDg14Encoded()[B = GetDg14Encoded()
  getDg15Encoded()[B = GetDg15Encoded()
  getDg1Encoded()[B = GetDg1Encoded()
  getDg2Encoded()[B = GetDg2Encoded()
  getDg3Encoded()[B = GetDg3Encoded()
  getDg4Encoded()[B = GetDg4Encoded()
  getDg5Encoded()[B = GetDg5Encoded()
  getDg6Encoded()[B = GetDg6Encoded()
  getDg7Encoded()[B = GetDg7Encoded()
  getDg8Encoded()[B = GetDg8Encoded()
  getDg9Encoded()[B = GetDg9Encoded()
  getSODEncoded()[B = GetSODEncoded()
  notSupportedMethodsString()Ljava/lang/String; = NotSupportedMethodsString()
  setDg10Encoded([B)V = SetDg10Encoded(byte[])
  setDg11Encoded([B)V = SetDg11Encoded(byte[])
  setDg12Encoded([B)V = SetDg12Encoded(byte[])
  setDg13Encoded([B)V = SetDg13Encoded(byte[])
  setDg14Encoded([B)V = SetDg14Encoded(byte[])
  setDg15Encoded([B)V = SetDg15Encoded(byte[])
  setDg1Encoded([B)V = SetDg1Encoded(byte[])
  setDg2Encoded([B)V = SetDg2Encoded(byte[])
  setDg3Encoded([B)V = SetDg3Encoded(byte[])
  setDg4Encoded([B)V = SetDg4Encoded(byte[])
  setDg5Encoded([B)V = SetDg5Encoded(byte[])
  setDg6Encoded([B)V = SetDg6Encoded(byte[])
  setDg7Encoded([B)V = SetDg7Encoded(byte[])
  setDg8Encoded([B)V = SetDg8Encoded(byte[])
  setDg9Encoded([B)V = SetDg9Encoded(byte[])
  setSODEncoded([B)V = SetSODEncoded(byte[])
  supportedMethodsString()Ljava/lang/String; = SupportedMethodsString()
com/acuant/mobilesdk/AcuantTagReadingListener = Com.Acuant.Mobilesdk.IAcuantTagReadingListener
  tagReadFailed(Ljava/lang/String;)V = TagReadFailed(string)
  tagReadSucceeded(Lcom/acuant/mobilesdk/AcuantNFCCardDetails;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)V = TagReadSucceeded(Com.Acuant.Mobilesdk.AcuantNFCCardDetails, Android.Graphics.Bitmap, Android.Graphics.Bitmap)
com/acuant/mobilesdk/AppContext = Com.Acuant.Mobilesdk.AppContext
  LOCKING_PIN = LockingPin
  getActivationState()Lcom/acuant/mobilesdk/TaskState; = ActivationState
  setActivationState(Lcom/acuant/mobilesdk/TaskState;)V = ActivationState
  getCamera()Landroid/hardware/Camera; = Camera
  getCardProcessingState()Lcom/acuant/mobilesdk/TaskState; = CardProcessingState
  setCardProcessingState(Lcom/acuant/mobilesdk/TaskState;)V = CardProcessingState
  isCropping()Z = Cropping
  setCropping(Z)V = Cropping
  getCroppingState()Lcom/acuant/mobilesdk/TaskState; = CroppingState
  setCroppingState(Lcom/acuant/mobilesdk/TaskState;)V = CroppingState
  getInstance()Lcom/acuant/mobilesdk/AppContext; = Instance
  isLiveFaceDetected()Z = LiveFaceDetected
  setLiveFaceDetected(Z)V = LiveFaceDetected
  getValidationState()Lcom/acuant/mobilesdk/TaskState; = ValidationState
  setValidationState(Lcom/acuant/mobilesdk/TaskState;)V = ValidationState
  releaseCamera()V = ReleaseCamera()
com/acuant/mobilesdk/BackgroundStateListener = Com.Acuant.Mobilesdk.BackgroundStateListener
  wasInBackground = WasInBackground
  getInstance()Lcom/acuant/mobilesdk/BackgroundStateListener; = Instance
  startActivityTransitionTimer()V = StartActivityTransitionTimer()
  stopActivityTransitionTimer()V = StopActivityTransitionTimer()
com/acuant/mobilesdk/Card = Com.Acuant.Mobilesdk.Card
  <init>()V = .ctor()
  DRIVERS_LICENSE_CARD_ASPECT_RATIO = DriversLicenseCardAspectRatio
  idLocationCityTestResult = IdLocationCityTestResult
  idLocationCountryTestResult = IdLocationCountryTestResult
  idLocationStateTestResult = IdLocationStateTestResult
  idLocationZipcodeTestResult = IdLocationZipcodeTestResult
  PASSPORT_CARD_ASPECT_RATIO = PassportCardAspectRatio
  getErrorCard()Ljava/lang/String; = ErrorCard
  setErrorCard(Ljava/lang/String;)V = ErrorCard
  isEmpty()Z = IsEmpty
com/acuant/mobilesdk/CardCroppingListener = Com.Acuant.Mobilesdk.ICardCroppingListener
  onBarcodeTimeOut(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)V = OnBarcodeTimeOut(Android.Graphics.Bitmap, Android.Graphics.Bitmap)
  onCancelCapture(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)V = OnCancelCapture(Android.Graphics.Bitmap, Android.Graphics.Bitmap)
  onCardCroppingFinish(Landroid/graphics/Bitmap;I)V = OnCardCroppingFinish(Android.Graphics.Bitmap, int)
  onCardCroppingFinish(Landroid/graphics/Bitmap;ZI)V = onCardCroppingFinishTwo(Android.Graphics.Bitmap, bool, int)
  onCardCroppingStart(Landroid/app/Activity;)V = OnCardCroppingStart(Android.App.Activity)
  onOriginalCapture(Landroid/graphics/Bitmap;)V = OnOriginalCapture(Android.Graphics.Bitmap)
  onPDF417Finish(Ljava/lang/String;)V = OnPDF417Finish(string)
com/acuant/mobilesdk/CardType = Com.Acuant.Mobilesdk.CardType
  <init>()V = .ctor()
  DRIVERS_LICENSE = DriversLicense
  FACIAL_RECOGNITION = FacialRecognition
  MEDICAL_INSURANCE = MedicalInsurance
  PASSPORT = Passport
com/acuant/mobilesdk/ConnectWebserviceListener = Com.Acuant.Mobilesdk.IConnectWebserviceListener
  deleteImageConnectServiceCompleted(Ljava/lang/String;)V = DeleteImageConnectServiceCompleted(string)
  deleteImageConnectServiceFailed(ILjava/lang/String;)V = DeleteImageConnectServiceFailed(int, string)
  processImageConnectServiceCompleted(Ljava/lang/String;)V = ProcessImageConnectServiceCompleted(string)
  processImageConnectServiceFailed(ILjava/lang/String;)V = ProcessImageConnectServiceFailed(int, string)
com/acuant/mobilesdk/detect/AutoFitTextureView = Com.Acuant.Mobilesdk.Detect.AutoFitTextureView
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int)
  setAspectRatio(II)V = SetAspectRatio(int, int)
com/acuant/mobilesdk/detect/Camera2FacialRecognitionManual = Com.Acuant.Mobilesdk.Detect.Camera2FacialRecognitionManual
  <init>()V = .ctor()
  LOGTAG = Logtag
  addWatermark()V = AddWatermark()
  convertDisplayRegion(Lcvlib/base/Rect;)Landroid/graphics/Rect; = ConvertDisplayRegion(Cvlib.Base.Rect)
  facialRecognitionTimedOut()V = FacialRecognitionTimedOut()
  isTabletDevice(Landroid/content/Context;)Z = IsTabletDevice(Android.Content.Context)
  onCreate(Landroid/os/Bundle;)V = OnCreate(Android.OS.Bundle)
  onPause()V = OnPause()
  onPreviewFrame([BLandroid/hardware/Camera;)V = OnPreviewFrame(byte[], Android.Hardware.Camera)
  onResume()V = OnResume()
  surfaceChanged(Landroid/view/SurfaceHolder;III)V = SurfaceChanged(Android.Views.ISurfaceHolder, Android.Graphics.Format, int, int)
  surfaceCreated(Landroid/view/SurfaceHolder;)V = SurfaceCreated(Android.Views.ISurfaceHolder)
  surfaceDestroyed(Landroid/view/SurfaceHolder;)V = SurfaceDestroyed(Android.Views.ISurfaceHolder)
com/acuant/mobilesdk/detect/CameraCardDetectActivityBase = Com.Acuant.Mobilesdk.Detect.CameraCardDetectActivityBase
  <init>()V = .ctor()
  cardType = CardType
  isBackSide = IsBackSide
  addFinalTextView(Landroid/app/Activity;Landroid/widget/RelativeLayout;)Landroid/view/View; = AddFinalTextView(Android.App.Activity, Android.Widget.RelativeLayout)
  addInitialTextView(Landroid/app/Activity;Landroid/widget/RelativeLayout;I)Landroid/view/View; = AddInitialTextView(Android.App.Activity, Android.Widget.RelativeLayout, int)
  onCreate(Landroid/os/Bundle;Lcom/acuant/mobilesdk/detect/CameraCardDetectActivityBase$Mode;)V = OnCreate(Android.OS.Bundle, Com.Acuant.Mobilesdk.Detect.CameraCardDetectActivityBase.Mode)
  setHoldSteadyTextVisibility(I)V = SetHoldSteadyTextVisibility(int)
com/acuant/mobilesdk/detect/CameraCardDetectBase = Com.Acuant.Mobilesdk.Detect.ICameraCardDetectBase
  setHoldSteadyTextVisibility(I)V = SetHoldSteadyTextVisibility(int)
com/acuant/mobilesdk/detect/CameraCardDetectManual = Com.Acuant.Mobilesdk.Detect.CameraCardDetectManual
  <init>()V = .ctor()
  processDetected([I[BLcvlib/zcard/ZCard;)V = ProcessDetected(int[], byte[], Cvlib.Zcard.ZCard)
  processPictureTaken([BIII)V = ProcessPictureTaken(byte[], int, int, int)
com/acuant/mobilesdk/detect/CameraPreviewBase = Com.Acuant.Mobilesdk.Detect.CameraPreviewBase
  <init>(Landroid/app/Activity;Lcom/acuant/mobilesdk/detect/CameraPreviewBase$LayoutMode;IIIILcom/acuant/mobilesdk/detect/PictureTakenListener;)V = .ctor(Android.App.Activity, Com.Acuant.Mobilesdk.Detect.CameraPreviewBase.LayoutMode, int, int, int, int, Com.Acuant.Mobilesdk.Detect.IPictureTakenListener)
  cameraId = CameraId
  CAMERA_PARAM_LANDSCAPE = CameraParamLandscape
  CAMERA_PARAM_ORIENTATION = CameraParamOrientation
  CAMERA_PARAM_PORTRAIT = CameraParamPortrait
  cameraParams = CameraParams
  cardType = CardType
  cssnActivity = CssnActivity
  hasAutoFocus = HasAutoFocus
  isFocused = IsFocused
  isManual = IsManual
  mCamera = MCamera
  mCameraId = MCameraId
  mCenterPosX = MCenterPosX
  mCenterPosY = MCenterPosY
  mHolder = MHolder
  mLayoutMode = MLayoutMode
  mPhotoHeight = MPhotoHeight
  mPhotoWidth = MPhotoWidth
  mPictureSize = MPictureSize
  mPictureSizeList = MPictureSizeList
  mPreviewReadyCallback = MPreviewReadyCallback
  mPreviewSize = MPreviewSize
  mPreviewSizeList = MPreviewSizeList
  mSurfaceChangedCallDepth = MSurfaceChangedCallDepth
  mSurfaceConfiguring = MSurfaceConfiguring
  pictureTakenListener = PictureTakenListener
  resizeHeight = ResizeHeight
  resizeWidth = ResizeWidth
  useFullScreen = UseFullScreen
  isManual()Z = IsManual
  isPortrait()Z = IsPortrait
  getPreviewSize()Landroid/hardware/Camera$Size; = PreviewSize
  adjustSurfaceLayoutSize(Landroid/hardware/Camera$Size;ZII)Z = AdjustSurfaceLayoutSize(Android.Hardware.Camera.Size, bool, int, int)
  configureCameraParameters(Landroid/hardware/Camera$Parameters;Z)V = ConfigureCameraParameters(Android.Hardware.Camera.Parameters, bool)
  convert([B)[I = Convert(byte[])
  determinePictureSize(Landroid/hardware/Camera$Size;)Landroid/hardware/Camera$Size; = DeterminePictureSize(Android.Hardware.Camera.Size)
  determinePreviewSize(ZII)Landroid/hardware/Camera$Size; = DeterminePreviewSize(bool, int, int)
  doSurfaceChanged(II)V = DoSurfaceChanged(int, int)
  onPreviewFrame([BLandroid/hardware/Camera;)V = OnPreviewFrame(byte[], Android.Hardware.Camera)
  setCenterPosition(II)V = SetCenterPosition(int, int)
  setOneShotPreviewCallback(Landroid/hardware/Camera$PreviewCallback;)V = SetOneShotPreviewCallback(Android.Hardware.Camera.IPreviewCallback)
  setOnPreviewReady(Lcom/acuant/mobilesdk/detect/CameraPreviewBase$PreviewReadyCallback;)V = SetOnPreviewReady(Com.Acuant.Mobilesdk.Detect.CameraPreviewBase.IPreviewReadyCallback)
  setResizeHeight(I)V = SetResizeHeight(int)
  setResizeWidth(I)V = SetResizeWidth(int)
  surfaceChanged(Landroid/view/SurfaceHolder;III)V = SurfaceChanged(Android.Views.ISurfaceHolder, Android.Graphics.Format, int, int)
  surfaceCreated(Landroid/view/SurfaceHolder;)V = SurfaceCreated(Android.Views.ISurfaceHolder)
  surfaceDestroyed(Landroid/view/SurfaceHolder;)V = SurfaceDestroyed(Android.Views.ISurfaceHolder)
com/acuant/mobilesdk/detect/CameraPreviewManual = Com.Acuant.Mobilesdk.Detect.CameraPreviewManual
  <init>(Landroid/app/Activity;ILcom/android/zcardcapture/ViewBracketsView;Lcom/acuant/mobilesdk/detect/CameraPreviewBase$LayoutMode;Landroid/content/Intent;IILcom/acuant/mobilesdk/detect/PictureTakenListener;)V = .ctor(Android.App.Activity, int, Com.Android.Zcardcapture.ViewBracketsView, Com.Acuant.Mobilesdk.Detect.CameraPreviewBase.LayoutMode, Android.Content.Intent, int, int, Com.Acuant.Mobilesdk.Detect.IPictureTakenListener)
  isMoving()Z = Moving
  setMoving(Z)V = Moving
  capturePhoto()V = CapturePhoto()
  doSurfaceChanged(II)V = DoSurfaceChanged(int, int)
  onAccuracyChanged(Landroid/hardware/Sensor;I)V = OnAccuracyChanged(Android.Hardware.Sensor, Android.Hardware.SensorStatus)
  onAutoFocus(ZLandroid/hardware/Camera;)V = OnAutoFocus(bool, Android.Hardware.Camera)
  onPictureTaken([BLandroid/hardware/Camera;)V = OnPictureTaken(byte[], Android.Hardware.Camera)
  onSensorChanged(Landroid/hardware/SensorEvent;)V = OnSensorChanged(Android.Hardware.SensorEvent)
com/acuant/mobilesdk/detect/FinalDescriptor = Com.Acuant.Mobilesdk.Detect.FinalDescriptor
  <init>()V = .ctor()
com/acuant/mobilesdk/detect/ImageProcessing = Com.Acuant.Mobilesdk.Detect.ImageProcessing
  <init>()V = .ctor()
  bytesToInts([B)[I = BytesToInts(byte[])
  convertNV21BytesToBMP([BII)Landroid/graphics/Bitmap; = ConvertNV21BytesToBMP(byte[], int, int)
  convertYUV420ToNV21(Landroid/media/Image;)[B = ConvertYUV420ToNV21(Android.Media.Image)
  encodeYUV420SP([B[III)V = EncodeYUV420SP(byte[], int[], int, int)
  freeMemory()V = FreeMemory()
  integersToBytes([I)[B = IntegersToBytes(int[])
  nv21toBitmap([BLandroid/content/Context;II)Landroid/graphics/Bitmap; = Nv21toBitmap(byte[], Android.Content.Context, int, int)
  rotateBitmap(Landroid/graphics/Bitmap;F)Landroid/graphics/Bitmap; = RotateBitmap(Android.Graphics.Bitmap, float)
  setDpi(Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap; = SetDpi(Android.Graphics.Bitmap, int)
  storeImage(Landroid/graphics/Bitmap;)V = StoreImage(Android.Graphics.Bitmap)
com/acuant/mobilesdk/detect/InitialDescriptor = Com.Acuant.Mobilesdk.Detect.InitialDescriptor
  <init>()V = .ctor()
  getIdLayout()Ljava/lang/Integer; = IdLayout
  setIdLayout(Ljava/lang/Integer;)V = IdLayout
com/acuant/mobilesdk/detect/PDF417/BarcodeCroppingListener = Com.Acuant.Mobilesdk.Detect.PDF417.IBarcodeCroppingListener
  onCroppingBarcodeSideFinished(Landroid/graphics/Bitmap;)V = OnCroppingBarcodeSideFinished(Android.Graphics.Bitmap)
com/acuant/mobilesdk/detect/PictureTakenListener = Com.Acuant.Mobilesdk.Detect.IPictureTakenListener
  processDetected([I[BLcvlib/zcard/ZCard;)V = ProcessDetected(int[], byte[], Cvlib.Zcard.ZCard)
  processPictureTaken([BIII)V = ProcessPictureTaken(byte[], int, int, int)
com/acuant/mobilesdk/DriversLicenseCard = Com.Acuant.Mobilesdk.DriversLicenseCard
  <init>()V = .ctor()
  getAddress()Ljava/lang/String; = Address
  getAddress2()Ljava/lang/String; = Address2
  getAddress3()Ljava/lang/String; = Address3
  getAddress4()Ljava/lang/String; = Address4
  getAddress5()Ljava/lang/String; = Address5
  getAddress6()Ljava/lang/String; = Address6
  isAddressCorrected()Z = AddressCorrected
  setAddressCorrected(Z)V = AddressCorrected
  isAddressVerified()Z = AddressVerified
  setAddressVerified(Z)V = AddressVerified
  getAudit()Ljava/lang/String; = Audit
  getAuthenticationObject()Ljava/lang/String; = AuthenticationObject
  getAuthenticationResult()Ljava/lang/String; = AuthenticationResult
  getAuthenticationResultSummaryList()Ljava/util/ArrayList; = AuthenticationResultSummaryList
  getCity()Ljava/lang/String; = City
  getCountryShort()Ljava/lang/String; = CountryShort
  getCounty()Ljava/lang/String; = County
  getCSC()Ljava/lang/String; = CSC
  getDateOfBirth()Ljava/lang/String; = DateOfBirth
  getDateOfBirth4()Ljava/lang/String; = DateOfBirth4
  getDateOfBirthLocal()Ljava/lang/String; = DateOfBirthLocal
  getDocType()Ljava/lang/String; = DocType
  getDocumentDetectedName()Ljava/lang/String; = DocumentDetectedName
  getDocumentDetectedNameShort()Ljava/lang/String; = DocumentDetectedNameShort
  getDocumentVerificationConfidenceRating()Ljava/lang/Integer; = DocumentVerificationConfidenceRating
  getEndorsements()Ljava/lang/String; = Endorsements
  getExpirationDate()Ljava/lang/String; = ExpirationDate
  getExpirationDate4()Ljava/lang/String; = ExpirationDate4
  getEyeColor()Ljava/lang/String; = EyeColor
  getFaceImage()Landroid/graphics/Bitmap; = FaceImage
  getFatherName()Ljava/lang/String; = FatherName
  getFee()Ljava/lang/String; = Fee
  getHair()Ljava/lang/String; = Hair
  getHeight()Ljava/lang/String; = Height
  getIdCountry()Ljava/lang/String; = IdCountry
  getIsBarcodeRead()Z = IsBarcodeRead
  isEmpty()Z = IsEmpty
  getIsIDVerified()Z = IsIDVerified
  getIsOcrRead()Z = IsOcrRead
  getIssueDate()Ljava/lang/String; = IssueDate
  getIssueDate4()Ljava/lang/String; = IssueDate4
  getIssueDateLocal()Ljava/lang/String; = IssueDateLocal
  getLicenceClass()Ljava/lang/String; = LicenceClass
  getLicenceID()Ljava/lang/String; = LicenceID
  getLicense()Ljava/lang/String; = License
  getMotherName()Ljava/lang/String; = MotherName
  getNameFirst()Ljava/lang/String; = NameFirst
  getNameFirst_NonMRZ()Ljava/lang/String; = NameFirst_NonMRZ
  getNameLast()Ljava/lang/String; = NameLast
  getNameLast_NonMRZ()Ljava/lang/String; = NameLast_NonMRZ
  getNameLast1()Ljava/lang/String; = NameLast1
  getNameLast2()Ljava/lang/String; = NameLast2
  getNameMiddle()Ljava/lang/String; = NameMiddle
  getNameMiddle_NonMRZ()Ljava/lang/String; = NameMiddle_NonMRZ
  getNameSuffix()Ljava/lang/String; = NameSuffix
  getNameSuffix_NonMRZ()Ljava/lang/String; = NameSuffix_NonMRZ
  getNationality()Ljava/lang/String; = Nationality
  getOriginal()Ljava/lang/String; = Original
  getPlaceOfBirth()Ljava/lang/String; = PlaceOfBirth
  getPlaceOfIssue()Ljava/lang/String; = PlaceOfIssue
  getReformatImage()Landroid/graphics/Bitmap; = ReformatImage
  getReformatImageTwo()Landroid/graphics/Bitmap; = ReformatImageTwo
  getRegion()I = Region
  getRestriction()Ljava/lang/String; = Restriction
  getResults2D()Ljava/lang/String; = Results2D
  getSex()Ljava/lang/String; = Sex
  getSignImage()Landroid/graphics/Bitmap; = SignImage
  getSigNum()Ljava/lang/String; = SigNum
  getSocialSecurity()Ljava/lang/String; = SocialSecurity
  getState()Ljava/lang/String; = State
  getTemplateType()Ljava/lang/String; = TemplateType
  getText1()Ljava/lang/String; = Text1
  getText2()Ljava/lang/String; = Text2
  getText3()Ljava/lang/String; = Text3
  getTransactionId()Ljava/lang/String; = TransactionId
  getType()Ljava/lang/String; = Type
  getWeight()Ljava/lang/String; = Weight
  getZip()Ljava/lang/String; = Zip
  getFaceImageByteArray()[B = GetFaceImageByteArray()
  getReformatImageByteArray()[B = GetReformatImageByteArray()
  getReformatImageTwoByteArray()[B = GetReformatImageTwoByteArray()
  getSignImageByteArray()[B = GetSignImageByteArray()
  licenseCardWithJson(Ljava/lang/String;I)Lcom/acuant/mobilesdk/DriversLicenseCard; = LicenseCardWithJson(string, int)
com/acuant/mobilesdk/ErrorType = Com.Acuant.Mobilesdk.ErrorType
  <init>()V = .ctor()
  AcuantErrorAccountDisabled = AcuantErrorAccountDisabled
  AcuantErrorAutoDetectState = AcuantErrorAutoDetectState
  AcuantErrorCameraUnauthorized = AcuantErrorCameraUnauthorized
  AcuantErrorCouldNotReachServer = AcuantErrorCouldNotReachServer
  AcuantErrorInactiveLicenseKey = AcuantErrorInactiveLicenseKey
  AcuantErrorIncorrectDocumentScanned = AcuantErrorIncorrectDocumentScanned
  AcuantErrorInternalServerError = AcuantErrorInternalServerError
  AcuantErrorInvalidLicenseKey = AcuantErrorInvalidLicenseKey
  AcuantErrorOnActiveLicenseKey = AcuantErrorOnActiveLicenseKey
  AcuantErrorTimedOut = AcuantErrorTimedOut
  AcuantErrorUnableToAuthenticate = AcuantErrorUnableToAuthenticate
  AcuantErrorUnableToCrop = AcuantErrorUnableToCrop
  AcuantErrorUnableToProcess = AcuantErrorUnableToProcess
  AcuantErrorUnknown = AcuantErrorUnknown
  AcuantErrorValidatingLicensekey = AcuantErrorValidatingLicensekey
  AcuantErrorWebResponse = AcuantErrorWebResponse
  AcuantNoneError = AcuantNoneError
com/acuant/mobilesdk/exceptions/AuthorizationException = Com.Acuant.Mobilesdk.Exceptions.AuthorizationException
  <init>(Ljava/lang/String;)V = .ctor(string)
com/acuant/mobilesdk/exceptions/ConnectionException = Com.Acuant.Mobilesdk.Exceptions.ConnectionException
  <init>(Ljava/lang/String;)V = .ctor(string)
com/acuant/mobilesdk/exceptions/TaskAlreadyRunningException = Com.Acuant.Mobilesdk.Exceptions.TaskAlreadyRunningException
  <init>(Ljava/lang/String;)V = .ctor(string)
com/acuant/mobilesdk/FacialData = Com.Acuant.Mobilesdk.FacialData
  <init>()V = .ctor()
  faceLivelinessDetection = FaceLivelinessDetection
  facialMatch = FacialMatch
  facialMatchConfidenceRating = FacialMatchConfidenceRating
  isFacialEnabled = IsFacialEnabled
  transactionId = TransactionId
  getFaceLivelinessDetection()Ljava/lang/Boolean; = FaceLivelinessDetection
  getFacialEnabled()Ljava/lang/Boolean; = FacialEnabled
  getFacialMatch()Z = FacialMatch
  getFacialMatchConfidenceRating()Ljava/lang/String; = FacialMatchConfidenceRating
  isEmpty()Z = IsEmpty
  getTransactionId()Ljava/lang/String; = TransactionId
  AcuantFacialDataWithJson(Ljava/lang/String;)Lcom/acuant/mobilesdk/FacialData; = AcuantFacialDataWithJson(string)
com/acuant/mobilesdk/FacialRecognitionListener = Com.Acuant.Mobilesdk.IFacialRecognitionListener
  onFacialRecognitionCanceled()V = OnFacialRecognitionCanceled()
  onFacialRecognitionCompleted(Landroid/graphics/Bitmap;)V = OnFacialRecognitionCompleted(Android.Graphics.Bitmap)
  onFacialRecognitionTimedOut(Landroid/graphics/Bitmap;)V = OnFacialRecognitionTimedOut(Android.Graphics.Bitmap)
com/acuant/mobilesdk/LicenseActivationDetails = Com.Acuant.Mobilesdk.LicenseActivationDetails
  <init>()V = .ctor()
  <init>(Ljava/lang/String;Ljava/lang/String;IZ)V = .ctor(string, string, int, bool)
  isIsLicenseKeyActivated()Z = IsLicenseKeyActivated
  setIsLicenseKeyActivated(Z)V = IsLicenseKeyActivated
  getIsLicenseKeyActivatedDescscription()Ljava/lang/String; = IsLicenseKeyActivatedDescscription
  setIsLicenseKeyActivatedDescscription(Ljava/lang/String;)V = IsLicenseKeyActivatedDescscription
  getWebResponseCode()I = WebResponseCode
  setWebResponseCode(I)V = WebResponseCode
  getWebResponseDescription()Ljava/lang/String; = WebResponseDescription
  setWebResponseDescription(Ljava/lang/String;)V = WebResponseDescription
com/acuant/mobilesdk/LicenseDetails = Com.Acuant.Mobilesdk.LicenseDetails
  <init>()V = .ctor()
  isAddressVerification()Z = AddressVerification
  setAddressVerification(Z)V = AddressVerification
  isAssureIDAllowed()Z = AssureIDAllowed
  setAssureIDAllowed(Z)V = AssureIDAllowed
  isBarcodeAllowed()Z = BarcodeAllowed
  setBarcodeAllowed(Z)V = BarcodeAllowed
  getBarcodeProcesses()Ljava/lang/String; = BarcodeProcesses
  setBarcodeProcesses(Ljava/lang/String;)V = BarcodeProcesses
  getCompanyName()Ljava/lang/String; = CompanyName
  setCompanyName(Ljava/lang/String;)V = CompanyName
  getCustomerName()Ljava/lang/String; = CustomerName
  setCustomerName(Ljava/lang/String;)V = CustomerName
  isDriversLicenseAllowed()Z = DriversLicenseAllowed
  setDriversLicenseAllowed(Z)V = DriversLicenseAllowed
  getDriversLicenseProcesses()Ljava/lang/String; = DriversLicenseProcesses
  setDriversLicenseProcesses(Ljava/lang/String;)V = DriversLicenseProcesses
  getEmail()Ljava/lang/String; = Email
  setEmail(Ljava/lang/String;)V = Email
  isFacialAllowed()Z = FacialAllowed
  setFacialAllowed(Z)V = FacialAllowed
  isInsuranceAllowed()Z = InsuranceAllowed
  setInsuranceAllowed(Z)V = InsuranceAllowed
  getInsuranceProcesses()Ljava/lang/String; = InsuranceProcesses
  setInsuranceProcesses(Ljava/lang/String;)V = InsuranceProcesses
  isLicenseKeyActivated()Z = LicenseKeyActivated
  setLicenseKeyActivated(Z)V = LicenseKeyActivated
  isPassportAllowed()Z = PassportAllowed
  setPassportAllowed(Z)V = PassportAllowed
  getPassportProcesses()Ljava/lang/String; = PassportProcesses
  setPassportProcesses(Ljava/lang/String;)V = PassportProcesses
  getResponseCodeAuthorization()Ljava/lang/String; = ResponseCodeAuthorization
  setResponseCodeAuthorization(Ljava/lang/String;)V = ResponseCodeAuthorization
  getResponseMessageAuthorization()Ljava/lang/String; = ResponseMessageAuthorization
  setResponseMessageAuthorization(Ljava/lang/String;)V = ResponseMessageAuthorization
  getSoftwareProvider()Ljava/lang/String; = SoftwareProvider
  setSoftwareProvider(Ljava/lang/String;)V = SoftwareProvider
  getWebResponseCode()Ljava/lang/String; = WebResponseCode
  setWebResponseCode(Ljava/lang/String;)V = WebResponseCode
  getWebResponseDescription()Ljava/lang/String; = WebResponseDescription
  setWebResponseDescription(Ljava/lang/String;)V = WebResponseDescription
  accountStatus()Z = AccountStatus()
  setAccountStatus(Z)V = SetAccountStatus(bool)
com/acuant/mobilesdk/LocationVerificationResult = Com.Acuant.Mobilesdk.LocationVerificationResult
  <init>()V = .ctor()
  FAILED = Failed
  NOT_AVAILABLE = NotAvailable
  PASSED = Passed
com/acuant/mobilesdk/ManageApp = Com.Acuant.Mobilesdk.ManageApp
  <init>()V = .ctor()
  getInstance()Lcom/acuant/mobilesdk/ManageApp; = Instance
  jsonarrayTobyte(Ljava/lang/String;Ljava/lang/String;)[B = JsonarrayTobyte(string, string)
  loadBoolean(Ljava/lang/String;)Ljava/lang/Boolean; = LoadBoolean(string)
  loadInt(Ljava/lang/String;)I = LoadInt(string)
  loadStrings(Ljava/lang/String;)Ljava/lang/String; = LoadStrings(string)
  storeBoolean(ZLjava/lang/String;)V = StoreBoolean(bool, string)
  storeInt(ILjava/lang/String;)V = StoreInt(int, string)
  storeStrings(Ljava/lang/String;Ljava/lang/String;)V = StoreStrings(string, string)
com/acuant/mobilesdk/MedicalCard = Com.Acuant.Mobilesdk.MedicalCard
  <init>()V = .ctor()
  getCity()Ljava/lang/String; = City
  setCity(Ljava/lang/String;)V = City
  getContractCode()Ljava/lang/String; = ContractCode
  setContractCode(Ljava/lang/String;)V = ContractCode
  getCopayEr()Ljava/lang/String; = CopayEr
  setCopayEr(Ljava/lang/String;)V = CopayEr
  getCopayOv()Ljava/lang/String; = CopayOv
  setCopayOv(Ljava/lang/String;)V = CopayOv
  getCopaySp()Ljava/lang/String; = CopaySp
  setCopaySp(Ljava/lang/String;)V = CopaySp
  getCopayUc()Ljava/lang/String; = CopayUc
  setCopayUc(Ljava/lang/String;)V = CopayUc
  getCoverage()Ljava/lang/String; = Coverage
  setCoverage(Ljava/lang/String;)V = Coverage
  getDateOfBirth()Ljava/lang/String; = DateOfBirth
  setDateOfBirth(Ljava/lang/String;)V = DateOfBirth
  getDeductible()Ljava/lang/String; = Deductible
  setDeductible(Ljava/lang/String;)V = Deductible
  getEffectiveDate()Ljava/lang/String; = EffectiveDate
  setEffectiveDate(Ljava/lang/String;)V = EffectiveDate
  getEmail()Ljava/lang/String; = Email
  setEmail(Ljava/lang/String;)V = Email
  getEmployer()Ljava/lang/String; = Employer
  setEmployer(Ljava/lang/String;)V = Employer
  getExpirationDate()Ljava/lang/String; = ExpirationDate
  setExpirationDate(Ljava/lang/String;)V = ExpirationDate
  getFirstName()Ljava/lang/String; = FirstName
  setFirstName(Ljava/lang/String;)V = FirstName
  getFullAddress()Ljava/lang/String; = FullAddress
  setFullAddress(Ljava/lang/String;)V = FullAddress
  getGroupName()Ljava/lang/String; = GroupName
  setGroupName(Ljava/lang/String;)V = GroupName
  getGroupNumber()Ljava/lang/String; = GroupNumber
  setGroupNumber(Ljava/lang/String;)V = GroupNumber
  isEmpty()Z = IsEmpty
  getIssuerNumber()Ljava/lang/String; = IssuerNumber
  setIssuerNumber(Ljava/lang/String;)V = IssuerNumber
  getLastName()Ljava/lang/String; = LastName
  setLastName(Ljava/lang/String;)V = LastName
  getMemberId()Ljava/lang/String; = MemberId
  setMemberId(Ljava/lang/String;)V = MemberId
  getMemberName()Ljava/lang/String; = MemberName
  setMemberName(Ljava/lang/String;)V = MemberName
  getMiddlename()Ljava/lang/String; = Middlename
  setMiddlename(Ljava/lang/String;)V = Middlename
  getNamePrefix()Ljava/lang/String; = NamePrefix
  setNamePrefix(Ljava/lang/String;)V = NamePrefix
  getNameSuffix()Ljava/lang/String; = NameSuffix
  setNameSuffix(Ljava/lang/String;)V = NameSuffix
  getOther()Ljava/lang/String; = Other
  setOther(Ljava/lang/String;)V = Other
  getPayerId()Ljava/lang/String; = PayerId
  setPayerId(Ljava/lang/String;)V = PayerId
  getPhoneNumber()Ljava/lang/String; = PhoneNumber
  setPhoneNumber(Ljava/lang/String;)V = PhoneNumber
  getPlanAdmin()Ljava/lang/String; = PlanAdmin
  setPlanAdmin(Ljava/lang/String;)V = PlanAdmin
  getPlanCode()Ljava/lang/String; = PlanCode
  setPlanCode(Ljava/lang/String;)V = PlanCode
  getPlanProvider()Ljava/lang/String; = PlanProvider
  setPlanProvider(Ljava/lang/String;)V = PlanProvider
  getPlanType()Ljava/lang/String; = PlanType
  setPlanType(Ljava/lang/String;)V = PlanType
  getReformattedImage()Landroid/graphics/Bitmap; = ReformattedImage
  setReformattedImage(Landroid/graphics/Bitmap;)V = ReformattedImage
  getReformattedImageTwo()Landroid/graphics/Bitmap; = ReformattedImageTwo
  setReformattedImageTwo(Landroid/graphics/Bitmap;)V = ReformattedImageTwo
  getRxBin()Ljava/lang/String; = RxBin
  setRxBin(Ljava/lang/String;)V = RxBin
  getRxGroup()Ljava/lang/String; = RxGroup
  setRxGroup(Ljava/lang/String;)V = RxGroup
  getRxId()Ljava/lang/String; = RxId
  setRxId(Ljava/lang/String;)V = RxId
  getRxPcn()Ljava/lang/String; = RxPcn
  setRxPcn(Ljava/lang/String;)V = RxPcn
  getState()Ljava/lang/String; = State
  setState(Ljava/lang/String;)V = State
  getStreet()Ljava/lang/String; = Street
  setStreet(Ljava/lang/String;)V = Street
  getTransactionId()Ljava/lang/String; = TransactionId
  getWebAddress()Ljava/lang/String; = WebAddress
  setWebAddress(Ljava/lang/String;)V = WebAddress
  getZip()Ljava/lang/String; = Zip
  setZip(Ljava/lang/String;)V = Zip
  AcuantMedicalCardWithJson(Ljava/lang/String;)Lcom/acuant/mobilesdk/MedicalCard; = AcuantMedicalCardWithJson(string)
com/acuant/mobilesdk/NFCUtils = Com.Acuant.Mobilesdk.NFCUtils
  <init>()V = .ctor()
  DEBUG = Debug
  decoder = Decoder
  ERROR = Error
  INFO = Info
  JPEG2000_ALT_MIME_TYPE = Jpeg2000AltMimeType
  JPEG2000_MIME_TYPE = Jpeg2000MimeType
  JPEG_MIME_TYPE = JpegMimeType
  WSQ_MIME_TYPE = WsqMimeType
  bytesToHex([B)Ljava/lang/String; = BytesToHex(byte[])
  changeMrZDateFormat(Ljava/lang/String;)Ljava/lang/String; = ChangeMrZDateFormat(string)
  getMD5Hash([B)[B = GetMD5Hash(byte[])
  getSHA1Hash([B)[B = GetSHA1Hash(byte[])
  read([BILjava/lang/String;)Landroid/graphics/Bitmap; = Read(byte[], int, string)
com/acuant/mobilesdk/PassportCard = Com.Acuant.Mobilesdk.PassportCard
  <init>()V = .ctor()
  getAddress2()Ljava/lang/String; = Address2
  setAddress2(Ljava/lang/String;)V = Address2
  getAddress3()Ljava/lang/String; = Address3
  setAddress3(Ljava/lang/String;)V = Address3
  getAuthenticationObject()Ljava/lang/String; = AuthenticationObject
  getAuthenticationResult()Ljava/lang/String; = AuthenticationResult
  setAuthenticationResult(Ljava/lang/String;)V = AuthenticationResult
  getAuthenticationResultSummaryList()Ljava/util/ArrayList; = AuthenticationResultSummaryList
  setAuthenticationResultSummaryList(Ljava/util/ArrayList;)V = AuthenticationResultSummaryList
  getCountry()Ljava/lang/String; = Country
  setCountry(Ljava/lang/String;)V = Country
  getCountryLong()Ljava/lang/String; = CountryLong
  setCountryLong(Ljava/lang/String;)V = CountryLong
  getDateOfBirth()Ljava/lang/String; = DateOfBirth
  setDateOfBirth(Ljava/lang/String;)V = DateOfBirth
  getDateOfBirth4()Ljava/lang/String; = DateOfBirth4
  setDateOfBirth4(Ljava/lang/String;)V = DateOfBirth4
  getEnd_POB()Ljava/lang/String; = End_POB
  setEnd_POB(Ljava/lang/String;)V = End_POB
  getExpirationDate()Ljava/lang/String; = ExpirationDate
  setExpirationDate(Ljava/lang/String;)V = ExpirationDate
  getExpirationDate4()Ljava/lang/String; = ExpirationDate4
  setExpirationDate4(Ljava/lang/String;)V = ExpirationDate4
  getFaceImage()Landroid/graphics/Bitmap; = FaceImage
  setFaceImage(Landroid/graphics/Bitmap;)V = FaceImage
  isEmpty()Z = IsEmpty
  getIssueDate()Ljava/lang/String; = IssueDate
  setIssueDate(Ljava/lang/String;)V = IssueDate
  getIssueDate4()Ljava/lang/String; = IssueDate4
  setIssueDate4(Ljava/lang/String;)V = IssueDate4
  getNameFirst()Ljava/lang/String; = NameFirst
  setNameFirst(Ljava/lang/String;)V = NameFirst
  getNameFirst_NonMRZ()Ljava/lang/String; = NameFirst_NonMRZ
  setNameFirst_NonMRZ(Ljava/lang/String;)V = NameFirst_NonMRZ
  getNameLast()Ljava/lang/String; = NameLast
  setNameLast(Ljava/lang/String;)V = NameLast
  getNameLast_NonMRZ()Ljava/lang/String; = NameLast_NonMRZ
  setNameLast_NonMRZ(Ljava/lang/String;)V = NameLast_NonMRZ
  getNameMiddle()Ljava/lang/String; = NameMiddle
  setNameMiddle(Ljava/lang/String;)V = NameMiddle
  getNationality()Ljava/lang/String; = Nationality
  setNationality(Ljava/lang/String;)V = Nationality
  getNationalityLong()Ljava/lang/String; = NationalityLong
  setNationalityLong(Ljava/lang/String;)V = NationalityLong
  getPassportNumber()Ljava/lang/String; = PassportNumber
  setPassportNumber(Ljava/lang/String;)V = PassportNumber
  getPersonalNumber()Ljava/lang/String; = PersonalNumber
  setPersonalNumber(Ljava/lang/String;)V = PersonalNumber
  getReformattedImage()Landroid/graphics/Bitmap; = ReformattedImage
  setReformattedImage(Landroid/graphics/Bitmap;)V = ReformattedImage
  getSex()Ljava/lang/String; = Sex
  setSex(Ljava/lang/String;)V = Sex
  getSignImage()Landroid/graphics/Bitmap; = SignImage
  setSignImage(Landroid/graphics/Bitmap;)V = SignImage
  getTransactionId()Ljava/lang/String; = TransactionId
  AcuantPassportCardWithJson(Ljava/lang/String;)Lcom/acuant/mobilesdk/PassportCard; = AcuantPassportCardWithJson(string)
  getFaceImageByteArray()[B = GetFaceImageByteArray()
  getReformattedImageByteArray()[B = GetReformattedImageByteArray()
  getSignImageByteArray()[B = GetSignImageByteArray()
com/acuant/mobilesdk/Permission = Com.Acuant.Mobilesdk.Permission
  <init>()V = .ctor()
  PERMISSION_CAMERA = PermissionCamera
  PERMISSION_LOCATION = PermissionLocation
com/acuant/mobilesdk/ProcessImageRequestOptions = Com.Acuant.Mobilesdk.ProcessImageRequestOptions
  <init>()V = .ctor()
  acuantCardType = AcuantCardType
  autoDetectState = AutoDetectState
  cropImage = CropImage
  DPI = Dpi
  faceDetec = FaceDetec
  imageSettings = ImageSettings
  iRegion = IRegion
  logTransaction = LogTransaction
  reformatImage = ReformatImage
  reformatImageColor = ReformatImageColor
  signDetec = SignDetec
  stateID = StateID
  getImageSource()I = ImageSource
  getInstance()Lcom/acuant/mobilesdk/ProcessImageRequestOptions; = Instance
  init()V = Init()
com/acuant/mobilesdk/Region = Com.Acuant.Mobilesdk.Region
  <init>()V = .ctor()
  REGION_AFRICA = RegionAfrica
  REGION_AMERICA = RegionAmerica
  REGION_ASIA = RegionAsia
  REGION_AUSTRALIA = RegionAustralia
  REGION_CANADA = RegionCanada
  REGION_EUROPE = RegionEurope
  REGION_UNITED_STATES = RegionUnitedStates
com/acuant/mobilesdk/Response = Com.Acuant.Mobilesdk.Response
  <init>(ILjava/lang/String;)V = .ctor(int, string)
  <init>(ILjava/lang/String;Lorg/json/JSONObject;)V = .ctor(int, string, Org.Json.JSONObject)
  getErrorMessage()Ljava/lang/String; = ErrorMessage
  setErrorMessage(Ljava/lang/String;)V = ErrorMessage
  getJsonResponse()Lorg/json/JSONObject; = JsonResponse
  setJsonResponse(Lorg/json/JSONObject;)V = JsonResponse
  getStatusCode()I = StatusCode
  setStatusCode(I)V = StatusCode
com/acuant/mobilesdk/task/CroppingTaskBase = Com.Acuant.Mobilesdk.Task.CroppingTaskBase
  <init>()V = .ctor()
  acuantActivity = AcuantActivity
  cardType = CardType
  croppedCard = CroppedCard
  DEFAULT_CROP_MANUAL_HEIGHT = DefaultCropManualHeight
  DEFAULT_CROP_MANUAL_WIDTH = DefaultCropManualWidth
  DEFAULT_CROP_PASSPORT_WIDTH = DefaultCropPassportWidth
  isBackSide = IsBackSide
  originalCapture = OriginalCapture
  originalPhoto = OriginalPhoto
  photo = Photo
  resizeWidth = ResizeWidth
  TEMP_FOLDER_NAME = TempFolderName
  TEMP_PHOTO_FILENAME = TempPhotoFilename
  callAcuantCardCroppingListenerOnFinish(Landroid/app/Activity;Landroid/graphics/Bitmap;Ljava/lang/Boolean;II)V = CallAcuantCardCroppingListenerOnFinish(Android.App.Activity, Android.Graphics.Bitmap, Java.Lang.Boolean, int, int)
  callAcuantOriginalCaptureListenerOnFinish(Landroid/app/Activity;Landroid/graphics/Bitmap;)V = CallAcuantOriginalCaptureListenerOnFinish(Android.App.Activity, Android.Graphics.Bitmap)
  callCssnCardCroppingListenerOnStart(Landroid/app/Activity;)V = CallCssnCardCroppingListenerOnStart(Android.App.Activity)
com/acuant/mobilesdk/TaskState = Com.Acuant.Mobilesdk.TaskState
  CANCELED = Canceled
  FINISHED = Finished
  NEVER_STARTED = NeverStarted
  RUNNING = Running
  valueOf(Ljava/lang/String;)Lcom/acuant/mobilesdk/TaskState; = ValueOf(string)
  values()[Lcom/acuant/mobilesdk/TaskState; = Values()
com/acuant/mobilesdk/util/Constants = Com.Acuant.Mobilesdk.Util.Constants
  <init>()V = .ctor()
  APP = App
  ERROR_CONEXION = ErrorConexion
  ERROR_IOEXEPTION = ErrorIoexeption
  ERROR_NETWORK = ErrorNetwork
  ERROR_RESULT = ErrorResult
  ERROR_TIME_OUT = ErrorTimeOut
  FACE_DETECTION_KEY = FaceDetectionKey
  FIRSTTIME_KEY = FirsttimeKey
  REGION_DETECTION_KEY = RegionDetectionKey
  RESULT_ERROR_KEY = ResultErrorKey
  RESULT_KEY = ResultKey
  SHARED_OPTIONS_NAME = SharedOptionsName
  SHARED_PREFS_MODE = SharedPrefsMode
  SIGNATURE_DETECTION_KEY = SignatureDetectionKey
com/acuant/mobilesdk/util/HttpProcessImageConnectRequestTask = Com.Acuant.Mobilesdk.Util.HttpProcessImageConnectRequestTask
  <init>(Landroid/content/Context;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(Android.Content.Context, Android.Graphics.Bitmap, Android.Graphics.Bitmap, string, int, string, string, string)
  networkListener = NetworkListener
  excecute()Ljava/lang/String; = Excecute()
  setBackImage(Landroid/graphics/Bitmap;)V = SetBackImage(Android.Graphics.Bitmap)
  setCardType(I)V = SetCardType(int)
  setCloudUrl(Ljava/lang/String;)V = SetCloudUrl(string)
  setFrontImage(Landroid/graphics/Bitmap;)V = SetFrontImage(Android.Graphics.Bitmap)
  setListener(Lcom/acuant/mobilesdk/util/NetworkListener;)V = SetListener(Com.Acuant.Mobilesdk.Util.INetworkListener)
com/acuant/mobilesdk/util/LongToast = Com.Acuant.Mobilesdk.Util.LongToast
  <init>()V = .ctor()
  cancel()V = Cancel()
  showToast(Landroid/content/Context;Ljava/lang/CharSequence;J)Lcom/acuant/mobilesdk/util/LongToast; = ShowToast(Android.Content.Context, Java.Lang.ICharSequence, long)
com/acuant/mobilesdk/util/ManageApp = Com.Acuant.Mobilesdk.Util.ManageApp
  <init>()V = .ctor()
  getInstance()Lcom/acuant/mobilesdk/util/ManageApp; = Instance
  jsonarrayTobyte(Lorg/json/JSONObject;Ljava/lang/String;)[B = JsonarrayTobyte(Org.Json.JSONObject, string)
  loadBoolean(Ljava/lang/String;)Ljava/lang/Boolean; = LoadBoolean(string)
  loadInt(Ljava/lang/String;)I = LoadInt(string)
  loadStrings(Ljava/lang/String;)Ljava/lang/String; = LoadStrings(string)
  storeBoolean(ZLjava/lang/String;)V = StoreBoolean(bool, string)
  storeInt(ILjava/lang/String;)V = StoreInt(int, string)
  storeStrings(Ljava/lang/String;Ljava/lang/String;)V = StoreStrings(string, string)
com/acuant/mobilesdk/util/NetworkListener = Com.Acuant.Mobilesdk.Util.INetworkListener
  networkRequestCompleted(Ljava/lang/String;I)V = NetworkRequestCompleted(string, int)
com/acuant/mobilesdk/util/Utils = Com.Acuant.Mobilesdk.Util.Utils
  <init>()V = .ctor()
  LOG_ENABLED = LogEnabled
  getDrawableFlashlightOff()Landroid/graphics/drawable/Drawable; = DrawableFlashlightOff
  setDrawableFlashlightOff(Landroid/graphics/drawable/Drawable;)V = DrawableFlashlightOff
  getDrawableFlashlightOn()Landroid/graphics/drawable/Drawable; = DrawableFlashlightOn
  setDrawableFlashlightOn(Landroid/graphics/drawable/Drawable;)V = DrawableFlashlightOn
  getDrawablePDF417()Landroid/graphics/drawable/Drawable; = DrawablePDF417
  setDrawablePDF417(Landroid/graphics/drawable/Drawable;)V = DrawablePDF417
  isFocusIssueModel()Z = IsFocusIssueModel
  appendLog(Ljava/lang/String;Ljava/lang/String;)V = AppendLog(string, string)
  bytesToHex([B)Ljava/lang/String; = BytesToHex(byte[])
  dismissDialog(Landroid/app/Dialog;)V = DismissDialog(Android.App.Dialog)
  getIPAddress(Z)Ljava/lang/String; = GetIPAddress(bool)
  getMACAddress(Ljava/lang/String;)Ljava/lang/String; = GetMACAddress(string)
  getUTF8Bytes(Ljava/lang/String;)[B = GetUTF8Bytes(string)
  isNetworkAvailable(Landroid/content/Context;)Z = IsNetworkAvailable(Android.Content.Context)
  loadFileAsString(Ljava/lang/String;)Ljava/lang/String; = LoadFileAsString(string)
  showDialog(Landroid/content/Context;Ljava/lang/String;)V = ShowDialog(Android.Content.Context, string)
  supportFrontCamera2(Landroid/app/Activity;)Ljava/lang/Boolean; = SupportFrontCamera2(Android.App.Activity)
  useAutoFocus(Landroid/app/Activity;)Z = UseAutoFocus(Android.App.Activity)
com/acuant/mobilesdk/util/WatermarkTextView = Com.Acuant.Mobilesdk.Util.WatermarkTextView
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
com/acuant/mobilesdk/WebRequestOptions = Com.Acuant.Mobilesdk.WebRequestOptions
  <init>()V = .ctor()
  acuantCardType = AcuantCardType
  autoDetectState = AutoDetectState
  cropImage = CropImage
  DPI = Dpi
  faceDetec = FaceDetec
  iRegion = IRegion
  reformatImage = ReformatImage
  reformatImageColor = ReformatImageColor
  signDetec = SignDetec
  stateID = StateID
  getInstance()Lcom/acuant/mobilesdk/WebRequestOptions; = Instance
  init()V = Init()
com/acuant/mobilesdk/WebServiceListener = Com.Acuant.Mobilesdk.IWebServiceListener
  activateLicenseKeyCompleted(Lcom/acuant/mobilesdk/LicenseActivationDetails;)V = ActivateLicenseKeyCompleted(Com.Acuant.Mobilesdk.LicenseActivationDetails)
  processImageServiceCompleted(Lcom/acuant/mobilesdk/Card;)V = ProcessImageServiceCompleted(Com.Acuant.Mobilesdk.Card)
  validateLicenseKeyCompleted(Lcom/acuant/mobilesdk/LicenseDetails;)V = ValidateLicenseKeyCompleted(Com.Acuant.Mobilesdk.LicenseDetails)
com/android/zcardcapture/Constants = Com.Android.Zcardcapture.Constants
  <init>()V = .ctor()
  CROPPEDIMAGE = Croppedimage
  imageCropBitmap = ImageCropBitmap
com/android/zcardcapture/FaceCaptureView = Com.Android.Zcardcapture.FaceCaptureView
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  drawTouchLine()V = DrawTouchLine()
  isTabletDevice(Landroid/content/Context;)Z = IsTabletDevice(Android.Content.Context)
  onDraw(Landroid/graphics/Canvas;)V = OnDraw(Android.Graphics.Canvas)
  setFrame(Landroid/graphics/Rect;)V = SetFrame(Android.Graphics.Rect)
com/android/zcardcapture/ViewBracketsView = Com.Android.Zcardcapture.ViewBracketsView
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;F)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, float)
com/android/zcardcapture/ViewfinderView = Com.Android.Zcardcapture.ViewfinderView
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  isTouchedDown()Z = TouchedDown
  setTouchedDown(Z)V = TouchedDown
  isTouchedLeft()Z = TouchedLeft
  setTouchedLeft(Z)V = TouchedLeft
  isTouchedMRZ()Z = TouchedMRZ
  setTouchedMRZ(Z)V = TouchedMRZ
  isTouchedRight()Z = TouchedRight
  setTouchedRight(Z)V = TouchedRight
  isTouchedUp()Z = TouchedUp
  setTouchedUp(Z)V = TouchedUp
  drawTouchLine()V = DrawTouchLine()
  onDraw(Landroid/graphics/Canvas;)V = OnDraw(Android.Graphics.Canvas)
  setFrame(Landroid/graphics/Rect;)V = SetFrame(Android.Graphics.Rect)
  setFrameMRZ(Landroid/graphics/Rect;)V = SetFrameMRZ(Android.Graphics.Rect)
com/cssnmobilesdk/BuildConfig = Com.Cssnmobilesdk.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
cvlib/base/Rect = Cvlib.Base.Rect
  <init>()V = .ctor()
  <init>([I)V = .ctor(int[])
  <init>(IIII)V = .ctor(int, int, int, int)
  height = Height
  width = Width
  x = X
  y = Y
cvlib/base/RectInvoke = Cvlib.Base.RectInvoke
  <init>()V = .ctor()
  <init>([Lcvlib/base/Rect;)V = .ctor(params Cvlib.Base.Rect[])
  <init>(J)V = .ctor(long)
  getNativeObjAddr()J = NativeObjAddr
  fromNativeAddr(J)Lcvlib/base/RectInvoke; = FromNativeAddr(long)
  fromRect([Lcvlib/base/Rect;)V = FromRect(params Cvlib.Base.Rect[])
  toRect()Lcvlib/base/Rect; = ToRect()
cvlib/zcard/CardViewMode = Cvlib.Zcard.CardViewMode
  <init>()V = .ctor()
  CVM_landscapeLeft = CVMLandscapeLeft
  CVM_landscapeRight = CVMLandscapeRight
  CVM_portrait = CVMPortrait
cvlib/zcard/Converter = Cvlib.Zcard.Converter
  <init>()V = .ctor()
  ARGB2Bitmap([III)Landroid/graphics/Bitmap; = ARGB2Bitmap(int[], int, int)
  RGB2NV21([III)[B = RGB2NV21(int[], int, int)
  YUV2Bitmap([BII)Landroid/graphics/Bitmap; = YUV2Bitmap(byte[], int, int)
cvlib/zcard/ZCard = Cvlib.Zcard.ZCard
  <init>()V = .ctor()
  getCropHeight()I = CropHeight
  getCropWidth()I = CropWidth
  convertJ2KToJPG([B)[B = ConvertJ2KToJPG(byte[])
  create()V = Create()
  crop(I)[I = Crop(int)
  cropNV21(I)[B = CropNV21(int)
  detect(Ljava/lang/String;)I = Detect(string)
  detectBuffer([III)I = DetectBuffer(int[], int, int)
  detectBufferNV21([BII)I = DetectBufferNV21(byte[], int, int)
  detectJPGBuffer([B)I = DetectJPGBuffer(byte[])
  getCardType()Lcvlib/zcard/ZCard$CardType; = GetCardType()
  release()V = Release()
cvlib/zfacelive/CameraFrame = Cvlib.Zfacelive.CameraFrame
  <init>()V = .ctor()
  makeMatFromCameraFrame([BIII)J = MakeMatFromCameraFrame(byte[], int, int, int)
  n_makeMatFromCameraFrame([BIII)J = N_makeMatFromCameraFrame(byte[], int, int, int)
cvlib/zfacelive/Mat = Cvlib.Zfacelive.Mat
  <init>()V = .ctor()
  <init>(J)V = .ctor(long)
  channels()I = Channels()
  create(J)V = Create(long)
  height()I = Height()
  n_channels(J)I = N_channels(long)
  n_createMat()J = N_createMat()
  n_destoryMat(J)V = N_destoryMat(long)
  n_getHeight(J)I = N_getHeight(long)
  n_getWidth(J)I = N_getWidth(long)
  n_rotate180(J)V = N_rotate180(long)
  n_rotateLeft(J)V = N_rotateLeft(long)
  n_rotateRight(J)V = N_rotateRight(long)
  n_toImage(JLjava/lang/String;)Z = N_toImage(long, string)
  release()V = Release()
  rotate180()V = Rotate180()
  rotateLeft()V = RotateLeft()
  rotateRight()V = RotateRight()
  toImage(Ljava/lang/String;)Z = ToImage(string)
  width()I = Width()
cvlib/zfacelive/ZFaceInfo = Cvlib.Zfacelive.ZFaceInfo
  <init>()V = .ctor()
  faceRegion = FaceRegion
  flagDetectedFace = FlagDetectedFace
  flagLeftEyeOpen = FlagLeftEyeOpen
  flagRightEyeOpen = FlagRightEyeOpen
  leftEyeValue = LeftEyeValue
  rightEyeValue = RightEyeValue
cvlib/zfacelive/ZFaceLiveCapture = Cvlib.Zfacelive.ZFaceLiveCapture
  <init>()V = .ctor()
  IVM_left = IVMLeft
  IVM_normal = IVMNormal
  IVM_r180 = IVMR180
  IVM_right = IVMRight
  getFace()Lcvlib/base/Rect; = Face
  isDetectedLiveness()Z = IsDetectedLiveness
  getStatus()Ljava/lang/String; = Status
  extractFaceInfo([BI)Lcvlib/zfacelive/ZFaceInfo; = ExtractFaceInfo(byte[], int)
  getImage()[I = GetImage()
  init()V = Init()
  process([BI)Z = Process(byte[], int)
  release()V = Release()
  setFrameSize(II)V = SetFrameSize(int, int)
  setRotateMode(I)V = SetRotateMode(int)
org/jnbis/Bitmap = Org.Jnbis.Bitmap
  <init>([BIIIII)V = .ctor(byte[], int, int, int, int, int)
  getDepth()I = Depth
  getHeight()I = Height
  getLength()I = Length
  getLossyflag()I = Lossyflag
  getPpi()I = Ppi
  getWidth()I = Width
  getPixels()[B = GetPixels()
org/jnbis/BitmapWithMetadata = Org.Jnbis.BitmapWithMetadata
  <init>([BIIIII)V = .ctor(byte[], int, int, int, int, int)
  <init>([BIIIIILjava/util/Map;[Ljava/lang/String;)V = .ctor(byte[], int, int, int, int, int, System.Collections.Generic.IDictionary<string, string>, params string[])
  getComments()Ljava/util/List; = Comments
  getMetadata()Ljava/util/Map; = Metadata
org/jnbis/NISTConstants = Org.Jnbis.INISTConstants
  NCM_AGE = NcmAge
  NCM_COLORSPACE = NcmColorspace
  NCM_COMPRESSION = NcmCompression
  NCM_EXT = NcmExt
  NCM_FACE_POS = NcmFacePos
  NCM_FING_CLASS = NcmFingClass
  NCM_HEADER = NcmHeader
  NCM_HISTORY = NcmHistory
  NCM_HV_FCTRS = NcmHvFctrs
  NCM_INTRLV = NcmIntrlv
  NCM_JPEGB_QUAL = NcmJpegbQual
  NCM_JPEGL_PREDICT = NcmJpeglPredict
  NCM_LOSSY = NcmLossy
  NCM_N_CMPNTS = NcmNCmpnts
  NCM_PIX_DEPTH = NcmPixDepth
  NCM_PIX_HEIGHT = NcmPixHeight
  NCM_PIX_WIDTH = NcmPixWidth
  NCM_PPI = NcmPpi
  NCM_SCAN_TYPE = NcmScanType
  NCM_SD_ID = NcmSdId
  NCM_SEX = NcmSex
  NCM_WSQ_RATE = NcmWsqRate
org/jnbis/test/WSQTest = Org.Jnbis.Test.WSQTest
  <init>()V = .ctor()
  main([Ljava/lang/String;)V = Main(string[])
  testDecode()V = TestDecode()
  testEncode()V = TestEncode()
org/jnbis/WSQConstants = Org.Jnbis.IWSQConstants
  ANY_WSQ = AnyWsq
  BITMASK = Bitmask
  COEFF_CODE = CoeffCode
  COM_WSQ = ComWsq
  DHT_WSQ = DhtWsq
  DQT_WSQ = DqtWsq
  DRT_WSQ = DrtWsq
  DTT_WSQ = DttWsq
  EOI_WSQ = EoiWsq
  MAX_DHT_TABLES = MaxDhtTables
  MAX_HIFILT = MaxHifilt
  MAX_HUFFBITS = MaxHuffbits
  MAX_HUFFCOEFF = MaxHuffcoeff
  MAX_HUFFCOUNTS_WSQ = MaxHuffcountsWsq
  MAX_HUFFZRUN = MaxHuffzrun
  MAX_LOFILT = MaxLofilt
  MAX_SUBBANDS = MaxSubbands
  NUM_SUBBANDS = NumSubbands
  Q_TREELEN = QTreelen
  RUN_CODE = RunCode
  SOB_WSQ = SobWsq
  SOF_WSQ = SofWsq
  SOI_WSQ = SoiWsq
  STRT_SIZE_REGION_2 = StrtSizeRegion2
  STRT_SIZE_REGION_3 = StrtSizeRegion3
  STRT_SUBBAND_2 = StrtSubband2
  STRT_SUBBAND_3 = StrtSubband3
  STRT_SUBBAND_DEL = StrtSubbandDel
  TBLS_N_SOB = TblsNSob
  TBLS_N_SOF = TblsNSof
  VARIANCE_THRESH = VarianceThresh
  W_TREELEN = WTreelen
org/jnbis/WSQDecoder = Org.Jnbis.WSQDecoder
  <init>()V = .ctor()
  decode(Ljava/io/DataInput;)Lorg/jnbis/BitmapWithMetadata; = Decode(Java.IO.IDataInput)
  decode(Ljava/io/InputStream;)Lorg/jnbis/BitmapWithMetadata; = Decode(System.IO.Stream)
org/jnbis/WSQEncoder = Org.Jnbis.WSQEncoder
  <init>()V = .ctor()
  encode(Ljava/io/DataOutput;Lorg/jnbis/Bitmap;D[Ljava/lang/String;)V = Encode(Java.IO.IDataOutput, Org.Jnbis.Bitmap, double, params string[])
  encode(Ljava/io/DataOutput;Lorg/jnbis/Bitmap;DLjava/util/Map;[Ljava/lang/String;)V = Encode(Java.IO.IDataOutput, Org.Jnbis.Bitmap, double, System.Collections.Generic.IDictionary<string, string>, params string[])
  encode(Ljava/io/OutputStream;Lorg/jnbis/Bitmap;D[Ljava/lang/String;)V = Encode(System.IO.Stream, Org.Jnbis.Bitmap, double, params string[])
  encode(Ljava/io/OutputStream;Lorg/jnbis/Bitmap;DLjava/util/Map;[Ljava/lang/String;)V = Encode(System.IO.Stream, Org.Jnbis.Bitmap, double, System.Collections.Generic.IDictionary<string, string>, params string[])
org/jnbis/WSQHelper = Org.Jnbis.WSQHelper
  <init>()V = .ctor()
